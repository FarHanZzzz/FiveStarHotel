Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.io.*;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n//import static cse.fivestarhotel.FrontDeskStaff.GuestcheckinController.EmailValidator.isValidEmail;\r\n\r\npublic class GuestcheckinController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private Label CheckInStatusLabel;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestEmailTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField NumberofRoomsTextField;\r\n    @javafx.fxml.FXML\r\n    private DatePicker CheckoutDatePicker;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestNameTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestContactNoTetField;\r\n    @javafx.fxml.FXML\r\n    private ComboBox<String> RoomTypeComboBox;\r\n\r\n\r\n    ObservableList<CheckInTableDummyClass> CheckinTabledataList = FXCollections.observableArrayList();\r\n    //ObservableList<Guest> GuestDetails = FXCollections.observableArrayList();\r\n\r\n\r\n\r\n     ArrayList<Integer> SingleRoom = new ArrayList<>();\r\n     ArrayList<Integer> DoubleeRoom = new ArrayList<>();\r\n     ArrayList<Integer> SuiteRoom = new ArrayList<>();\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    private TextArea GuestTextAreaDetails;\r\n\r\n\r\n    // ArrayList<CheckInTableDummyClass> CheckinTabledataList = new ArrayList<>();\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n\r\n\r\n        for (int i = 1; i <= 100; i++) {\r\n            if (i <= 50) SingleRoom.add(i); // 50 Single rooms\r\n            else if (i <= 80) DoubleeRoom.add(i); // 30 Double rooms\r\n            else SuiteRoom.add(i); // 20 Suite rooms\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        // combobox\r\n        RoomTypeComboBox.getItems().addAll(\"Single\", \"Double\", \"Suite\");\r\n\r\n\r\n\r\n        //String name, String email, String roomtype, Integer noofRooms, String roomnumber, LocalDate checkoutDate\r\n\r\n\r\n\r\n\r\n        //CheckinTabledataList.add(new CheckInTableDummyClass(\"John Doe\", \"john@example.com\", \"Single\", 1, \"101\", LocalDate.now()));\r\n\r\n        //CheckinTableView.setItems(CheckinTabledataList);\r\n//        CheckinTableView.refresh();\r\n\r\n    }\r\n\r\n\r\n// name,  email,  roomtype,  noofRooms,  roomnumber,  checkoutDate\r\n\r\n    @javafx.fxml.FXML\r\n    public void ClearFieldsOnAction(ActionEvent actionEvent) {\r\n        GuestNameTextField.clear();\r\n        GuestContactNoTetField.clear();\r\n        NumberofRoomsTextField.clear();\r\n        GuestEmailTextField.clear();\r\n        RoomTypeComboBox.setValue(null);\r\n        CheckoutDatePicker.setValue(null);\r\n        NumberofRoomsTextField.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void CheckInOnAction(ActionEvent actionEvent) {\r\n\r\n        String name = GuestNameTextField.getText();\r\n        String email = GuestEmailTextField.getText();\r\n        Integer contactno = Integer.valueOf(GuestContactNoTetField.getText());\r\n        LocalDate checkoutDate = CheckoutDatePicker.getValue();\r\n        String roomtype = RoomTypeComboBox.getValue();\r\n        int noofRooms;\r\n\r\n\r\n\r\n        try {\r\n            noofRooms = Integer.parseInt(NumberofRoomsTextField.getText());\r\n        } catch (NumberFormatException e) {\r\n            CheckInStatusLabel.setText(\"Invalid number of Rooms\");\r\n            return;\r\n        }\r\n\r\n\r\n        // validating other inputs\r\n        if (name.isEmpty() || email.isEmpty() || roomtype.isEmpty() || noofRooms <= 0 || contactno == null ||  checkoutDate == null ){\r\n            CheckInStatusLabel.setText(\"Please fill all the fields\");\r\n        }\r\n\r\n\r\n        // Allocate rooms\r\n        List<Integer> allocatedRooms = allocateRooms(roomtype, noofRooms);\r\n        if (allocatedRooms.isEmpty()) {\r\n            CheckInStatusLabel.setText(\"Not enough rooms available for the selected type!\");\r\n            return;\r\n        }\r\n\r\n        String roomNumber = allocatedRooms.stream().map(String::valueOf).collect(Collectors.joining(\", \"));\r\n\r\n\r\n        CheckInTableDummyClass c = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate,contactno);\r\n        CheckinTabledataList.add(c);\r\n        //CheckinTableView.refresh();\r\n\r\n\r\n\r\n\r\n        try {\r\n            File f = new File(\"CheckInGuestDetails.bin\");\r\n            FileOutputStream fos = null;\r\n            ObjectOutputStream oos = null;\r\n\r\n            fos = new FileOutputStream(f);\r\n                oos = new ObjectOutputStream(fos);\r\n            for(CheckInTableDummyClass s : CheckinTabledataList){\r\n                oos.writeObject(s);\r\n                CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n\r\n          }\r\n\r\n\r\n            oos.close();\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//         for (CheckInTableDummyClass s : CheckinTabledataList){\r\n//         //   CheckinTableView.getItems().add(s);\r\n//         //   CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n//\r\n//\r\n//\r\n//\r\n//        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public List<Integer> allocateRooms(String roomtype , int noofRooms) {\r\n        List<Integer> roomList;\r\n        List<Integer> allocatedRooms = new ArrayList<>();\r\n\r\n        switch (roomtype) {\r\n            case \"Single\" -> roomList = SingleRoom;\r\n            case \"Double\" -> roomList = DoubleeRoom;\r\n            case \"Suite\" -> roomList = SuiteRoom;\r\n\r\n            default -> {\r\n                return allocatedRooms; // empty list if invalid\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // allocate room if avalidable\r\n        System.out.println(\"Room list for \" + roomtype + \": \" + roomList);\r\n\r\n        // roomlist = 50 , 3\r\n\r\n        if (roomList.size() >= noofRooms) {\r\n            for(int i = 0; i < noofRooms; i++){\r\n                allocatedRooms.add(roomList.remove(0));  // remove and allocate\r\n\r\n            }\r\n\r\n            System.out.println(\"1\"+ allocatedRooms);\r\n\r\n\r\n            // single 1 -50 =\r\n\r\n        }\r\n\r\n        else {\r\n            System.out.println(\"Insufficient rooms for \" + roomtype + \". Available: \" + roomList.size());\r\n\r\n        }\r\n\r\n\r\n        System.out.println(\"Final \"+ allocatedRooms);\r\n\r\n        return allocatedRooms;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //        // ends\r\n        //\r\n        //        //        CheckinTabledataList.add(new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate));\r\n        ////        for(CheckInTableDummyClass c: CheckinTabledataList){\r\n        ////            CheckinTableView.getItems().add(c);\r\n        ////            CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n        //\r\n        //        //CheckInTableDummyClass temp = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate);\r\n        ////        CheckinTabledataList.add(temp);\r\n        ////        CheckinTableView.refresh();\r\n        //        // String name, String email, String roomtype, Integer noofRooms, Integer roomnumber, LocalDate checkoutDate\r\n        //\r\n        //\r\n        //// main code of tableview\r\n        //\r\n        //\r\n        //\r\n        //            //Will create multiple file header issue while appending objects (class instances)\r\n        //\r\n        //        // append\r\n\r\n\r\n        //\r\n        ////            if(f.exists()) {\r\n        ////                fos = new FileOutputStream(f, true);\r\n        ////                oos = new AppendableObjectOutputStream(fos);\r\n        ////            }\r\n        ////            else {\r\n        ////                fos = new FileOutputStream(f);\r\n        ////                oos = new ObjectOutputStream(fos);\r\n        ////            }\r\n        ////\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java	(date 1733913624601)
@@ -139,7 +139,7 @@
 
         CheckInTableDummyClass c = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate,contactno);
         CheckinTabledataList.add(c);
-        //CheckinTableView.refresh();
+
 
 
 
@@ -149,11 +149,28 @@
             FileOutputStream fos = null;
             ObjectOutputStream oos = null;
 
+
+            if(f.exists()) {
+                fos = new FileOutputStream(f, true);
+                oos = new AppendableObjectOutputStream(fos);
+            }
+            else {
+                fos = new FileOutputStream(f);
+                oos = new ObjectOutputStream(fos);
+            }
+
+
+
+
+
+
+
             fos = new FileOutputStream(f);
                 oos = new ObjectOutputStream(fos);
             for(CheckInTableDummyClass s : CheckinTabledataList){
                 oos.writeObject(s);
                 CheckInStatusLabel.setText("Check-in successful! Rooms allocated: " + roomNumber);
+                GuestTextAreaDetails.setText("Guest Details: " + s.toString());
 
           }
 
@@ -261,17 +278,17 @@
 
 
         //
-        ////            if(f.exists()) {
-        ////                fos = new FileOutputStream(f, true);
-        ////                oos = new AppendableObjectOutputStream(fos);
-        ////            }
-        ////            else {
-        ////                fos = new FileOutputStream(f);
-        ////                oos = new ObjectOutputStream(fos);
-        ////            }
-        ////
-
-
+//                    if(f.exists()) {
+//                        fos = new FileOutputStream(f, true);
+//                        oos = new AppendableObjectOutputStream(fos);
+//                    }
+//                    else {
+//                        fos = new FileOutputStream(f);
+//                        oos = new ObjectOutputStream(fos);
+//                    }
+//
+//
+//
 
 
     }
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport java.io.Serializable;\r\nimport java.time.LocalDate;\r\n\r\npublic class CheckInTableDummyClass  implements Serializable{\r\n    private String name;\r\n    private String email;\r\n    private String roomtype;\r\n    private Integer noofRooms;\r\n    private String roomnumber;\r\n    private LocalDate checkoutDate;\r\n    private Integer contactinfo;\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getRoomtype() {\r\n        return roomtype;\r\n    }\r\n\r\n    public void setRoomtype(String roomtype) {\r\n        this.roomtype = roomtype;\r\n    }\r\n\r\n    public Integer getNoofRooms() {\r\n        return noofRooms;\r\n    }\r\n\r\n    public void setNoofRooms(Integer noofRooms) {\r\n        this.noofRooms = noofRooms;\r\n    }\r\n\r\n    public String getRoomnumber() {\r\n        return roomnumber;\r\n    }\r\n\r\n    public void setRoomnumber(String roomnumber) {\r\n        this.roomnumber = roomnumber;\r\n    }\r\n\r\n    public LocalDate getCheckoutDate() {\r\n        return checkoutDate;\r\n    }\r\n\r\n    public void setCheckoutDate(LocalDate checkoutDate) {\r\n        this.checkoutDate = checkoutDate;\r\n    }\r\n\r\n    public Integer getContactinfo() {\r\n        return contactinfo;\r\n    }\r\n\r\n    public void setContactinfo(Integer contactinfo) {\r\n        this.contactinfo = contactinfo;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"CheckInTableDummyClass{\" +\r\n                \"name='\" + name + '\\'' +\r\n                \", email='\" + email + '\\'' +\r\n                \", roomtype='\" + roomtype + '\\'' +\r\n                \", noofRooms=\" + noofRooms +\r\n                \", roomnumber='\" + roomnumber + '\\'' +\r\n                \", checkoutDate=\" + checkoutDate +\r\n                \", contactinfo=\" + contactinfo +\r\n                '}';\r\n    }\r\n\r\n    public CheckInTableDummyClass(String name, String email, String roomtype, Integer noofRooms, String roomnumber, LocalDate checkoutDate, Integer contactinfo) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.roomtype = roomtype;\r\n        this.noofRooms = noofRooms;\r\n        this.roomnumber = roomnumber;\r\n        this.checkoutDate = checkoutDate;\r\n        this.contactinfo = contactinfo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java	(date 1733913624608)
@@ -70,15 +70,9 @@
 
     @Override
     public String toString() {
-        return "CheckInTableDummyClass{" +
-                "name='" + name + '\'' +
-                ", email='" + email + '\'' +
-                ", roomtype='" + roomtype + '\'' +
-                ", noofRooms=" + noofRooms +
-                ", roomnumber='" + roomnumber + '\'' +
-                ", checkoutDate=" + checkoutDate +
-                ", contactinfo=" + contactinfo +
-                '}';
+        return
+                "name=" + name  + ", email =" + email + ", roomtype=" + roomtype  + ", noofRooms=" + noofRooms +
+                        ", roomnumber='" + roomnumber  + ", checkoutDate=" + checkoutDate + ", contactinfo=" + contactinfo + '}';
     }
 
     public CheckInTableDummyClass(String name, String email, String roomtype, Integer noofRooms, String roomnumber, LocalDate checkoutDate, Integer contactinfo) {
Index: src/main/java/cse/fivestarhotel/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n\r\n\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        stage.setTitle(\"Sign in!\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HelloApplication.java b/src/main/java/cse/fivestarhotel/HelloApplication.java
--- a/src/main/java/cse/fivestarhotel/HelloApplication.java	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
+++ b/src/main/java/cse/fivestarhotel/HelloApplication.java	(date 1733913624626)
@@ -10,7 +10,7 @@
     public void start(Stage stage) throws IOException {
 
 
-        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml"));
+        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml"));
         Scene scene = new Scene(fxmlLoader.load());
         stage.setTitle("Sign in!");
         stage.setScene(scene);
Index: src/main/resources/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml
===================================================================
diff --git a/src/main/resources/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml b/src/main/resources/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml
deleted file mode 100644
--- a/src/main/resources/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
+++ /dev/null	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.TableColumn?>
-<?import javafx.scene.control.TableView?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.shape.Line?>
-<?import javafx.scene.text.Font?>
-<?import javafx.scene.text.Text?>
-
-<AnchorPane prefHeight="720.0" prefWidth="936.0" style="-fx-background-color: #C7C0A7;" xmlns="http://javafx.com/javafx/23" xmlns:fx="http://javafx.com/fxml/1" fx:controller="cse.fivestarhotel.FrontDeskStaff.AccessGuestDetailsController">
-   <children>
-      <Line endX="730.0" layoutX="202.0" layoutY="88.0" startX="-202.00001525878906" stroke="#8c8c7b" strokeWidth="2.0" />
-      <Text fill="#0f4a33" layoutX="22.0" layoutY="60.0" strokeType="OUTSIDE" strokeWidth="0.0" text="⮯ Access Guest Details ">
-         <font>
-            <Font name="Bell MT Bold" size="45.0" />
-         </font>
-      </Text>
-      <TableView fx:id="CheckinTableView" layoutX="4.0" layoutY="360.0" prefHeight="235.0" prefWidth="924.0" style="-fx-border-style: #8C8C7B; -fx-background-color: #B6A990;">
-         <columns>
-            <TableColumn fx:id="NameCol" prefWidth="136.0" text="Name" />
-            <TableColumn fx:id="EmailCol" prefWidth="141.00001525878906" text="Email" />
-            <TableColumn fx:id="RoomtypeCol" prefWidth="107.0" text="Roomtype" />
-            <TableColumn fx:id="NumberofRoomsCol" prefWidth="181.0" text="Number of Rooms" />
-            <TableColumn fx:id="roomnumberCol" prefWidth="108.0" text="Room  Number" />
-            <TableColumn fx:id="checkoutCol" prefWidth="124.0" text="Check Out Date" />
-            <TableColumn fx:id="contactInfoCol" prefWidth="132.0" text="Contact Info" />
-         </columns>
-         <columnResizePolicy>
-            <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-         </columnResizePolicy>
-      </TableView>
-      <Button layoutX="334.0" layoutY="254.0" mnemonicParsing="false" onAction="#GenerateCheckinDetailsTableOnAction" prefHeight="55.0" prefWidth="174.0" style="-fx-border-color: black;" text="Generate Check in Details Table" textAlignment="CENTER" textFill="#4d4545" wrapText="true">
-         <font>
-            <Font size="15.0" />
-         </font>
-      </Button>
-   </children>
-</AnchorPane>
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java
deleted file mode 100644
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
+++ /dev/null	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
@@ -1,93 +0,0 @@
-package cse.fivestarhotel.FrontDeskStaff;
-
-import javafx.event.ActionEvent;
-import javafx.scene.control.TableColumn;
-import javafx.scene.control.TableView;
-import javafx.scene.control.TextField;
-import javafx.scene.control.cell.PropertyValueFactory;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.ObjectInputStream;
-import java.io.Serializable;
-import java.time.LocalDate;
-
-public class AccessGuestDetailsController implements Serializable
-{
-
-    @javafx.fxml.FXML
-    private TableView<CheckInTableDummyClass> CheckinTableView;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass,Integer> NumberofRoomsCol;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass,String> RoomtypeCol;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass,String> roomnumberCol;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass,String> EmailCol;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass, LocalDate> checkoutCol;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass,String> NameCol;
-    @javafx.fxml.FXML
-    private TableColumn<CheckInTableDummyClass,Integer> contactInfoCol;
-
-    @javafx.fxml.FXML
-    public void initialize() {
-        NameCol.setCellValueFactory(new PropertyValueFactory<>("name"));
-        EmailCol.setCellValueFactory(new PropertyValueFactory<>("email"));
-        RoomtypeCol.setCellValueFactory(new PropertyValueFactory<>("roomtype"));
-        NumberofRoomsCol.setCellValueFactory(new PropertyValueFactory<>("noofRooms"));
-        roomnumberCol.setCellValueFactory(new PropertyValueFactory<>("roomnumber"));
-        checkoutCol.setCellValueFactory(new PropertyValueFactory<>("checkoutDate"));
-        contactInfoCol.setCellValueFactory(new PropertyValueFactory<>("contactinfo"));
-
-
-
-
-    }
-
-
-
-    @javafx.fxml.FXML
-    public void GenerateCheckinDetailsTableOnAction(ActionEvent actionEvent) {
-
-        FileInputStream fis=null;
-        ObjectInputStream ois=null;
-
-
-        try{
-            File f = new File("CheckInGuestDetails.bin");
-            if(f.exists()){
-                fis = new FileInputStream(f);
-            }
-            else{
-                //Alert: file does not exist
-            }
-            if(fis != null) ois = new ObjectInputStream(fis);
-
-            CheckinTableView.getItems().clear();
-
-            while(true) {
-                CheckinTableView.getItems().add((CheckInTableDummyClass) ois.readObject());
-
-
-                //CheckinTableView.setItems(CheckinTabledataList);
-            }
-            //ois.close();
-
-        }
-        catch(Exception e) {
-            try {
-                if (ois != null) ois.close();
-
-            } catch (Exception e2) {
-                //
-
-            }
-
-        }
-
-    }
-
-        }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FarHanZzzz&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FarHanZzzz/FiveStarHotel.git&quot;,\r\n    &quot;accountId&quot;: &quot;ffe06a0d-a38a-49d0-901d-f1ca4a8601e0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pOTHwVPEYQNUAVmymNU9UCEMUe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cse.fivestarhotel.HelloApplication\" />\r\n      <module name=\"FiveStarHotel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\" />\r\n      <created>1732636037915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732636037915</updated>\r\n      <workItem from=\"1732691317064\" duration=\"1348000\" />\r\n      <workItem from=\"1732740293857\" duration=\"392000\" />\r\n      <workItem from=\"1732740700449\" duration=\"854000\" />\r\n      <workItem from=\"1732812843972\" duration=\"6000\" />\r\n      <workItem from=\"1732812928251\" duration=\"38000\" />\r\n      <workItem from=\"1732813016733\" duration=\"370000\" />\r\n      <workItem from=\"1732813603231\" duration=\"2575000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalAccessException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 65ae4f40e472bca6d5d691f6c52b7cbf153ac71f)
+++ b/.idea/workspace.xml	(date 1733913984762)
@@ -4,7 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f45a8678-6144-4ee8-b094-1a886ecfbc88" name="Changes" comment="" />
+    <list default="true" id="f45a8678-6144-4ee8-b094-1a886ecfbc88" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CheckInGuestDetails.bin" beforeDir="false" afterPath="$PROJECT_DIR$/CheckInGuestDetails.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/CheckInTableDummyClass.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml" beforeDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
