Index: src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.HotelHeadManager;\r\n\r\nimport com.sun.tools.javac.Main;\r\nimport cse.fivestarhotel.CEO.Announcement;\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.time.LocalDate;\r\n\r\npublic class HeadManagerDashboardController\r\n{\r\n    @javafx.fxml.FXML\r\n    private BorderPane DashboardBorderPaneHeadManager;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Announcement,String> announcementsCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Announcement, LocalDate> dateCol;\r\n    @javafx.fxml.FXML\r\n    private TableView<Announcement> AnnouncementTableView;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Announcement,String> positionCol;\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n        announcementsCol.setCellValueFactory(new PropertyValueFactory<>(\"announcement\"));\r\n        positionCol.setCellValueFactory(new PropertyValueFactory<>(\"position\"));\r\n        dateCol.setCellValueFactory(new PropertyValueFactory<>(\"date\"));\r\n\r\n\r\n\r\n\r\n        FileInputStream fis=null;\r\n        ObjectInputStream ois=null;\r\n\r\n\r\n        try{\r\n            File f = new File(\"AnnoncementsDetails.bin\");\r\n            if(f.exists()){\r\n                fis = new FileInputStream(f);\r\n            }\r\n            else{\r\n                //Alert: file does not exist\r\n            }\r\n            if(fis != null) ois = new ObjectInputStream(fis);\r\n\r\n            AnnouncementTableView.getItems().clear();\r\n\r\n            while(true) {\r\n                AnnouncementTableView.getItems().add((Announcement) ois.readObject());\r\n\r\n\r\n                //CheckinTableView.setItems(CheckinTabledataList);\r\n            }\r\n            //ois.close();\r\n\r\n        }\r\n        catch(Exception e) {\r\n            try {\r\n                if (ois != null) ois.close();\r\n\r\n            } catch (Exception e2) {\r\n                //\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void BackToHeadManagerDashboardOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void monthlyrevenueOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml\"));\r\n\r\n            DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void PostANNOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/PostAnnouncement.fxml\"));\r\n\r\n            DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void performancereportsOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/PerformanceReports.fxml\"));\r\n\r\n            DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void viewbudgetOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/ViewBudget.fxml\"));\r\n\r\n            DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void hotelguestreviewsOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/ViewCustomerReviews.fxml\"));\r\n\r\n            DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void staffinquiriesOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/ViewStaffIquiries.fxml\"));\r\n\r\n            DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void HeadManagerLogoutOnAction(ActionEvent actionEvent) {\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java b/src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java
--- a/src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java	(revision 5e0ee62ea436f1fd072aca4fbd75190c0c5adeea)
+++ b/src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java	(date 1734113976485)
@@ -20,18 +20,17 @@
 import java.io.ObjectInputStream;
 import java.time.LocalDate;
 
-public class HeadManagerDashboardController
-{
+public class HeadManagerDashboardController {
     @javafx.fxml.FXML
     private BorderPane DashboardBorderPaneHeadManager;
     @javafx.fxml.FXML
-    private TableColumn<Announcement,String> announcementsCol;
+    private TableColumn<Announcement, String> announcementsCol;
     @javafx.fxml.FXML
     private TableColumn<Announcement, LocalDate> dateCol;
     @javafx.fxml.FXML
     private TableView<Announcement> AnnouncementTableView;
     @javafx.fxml.FXML
-    private TableColumn<Announcement,String> positionCol;
+    private TableColumn<Announcement, String> positionCol;
 
     @javafx.fxml.FXML
     public void initialize() {
@@ -41,25 +40,22 @@
         dateCol.setCellValueFactory(new PropertyValueFactory<>("date"));
 
 
-
-
-        FileInputStream fis=null;
-        ObjectInputStream ois=null;
+        FileInputStream fis = null;
+        ObjectInputStream ois = null;
 
 
-        try{
+        try {
             File f = new File("AnnoncementsDetails.bin");
-            if(f.exists()){
+            if (f.exists()) {
                 fis = new FileInputStream(f);
-            }
-            else{
+            } else {
                 //Alert: file does not exist
             }
-            if(fis != null) ois = new ObjectInputStream(fis);
+            if (fis != null) ois = new ObjectInputStream(fis);
 
             AnnouncementTableView.getItems().clear();
 
-            while(true) {
+            while (true) {
                 AnnouncementTableView.getItems().add((Announcement) ois.readObject());
 
 
@@ -67,8 +63,7 @@
             }
             //ois.close();
 
-        }
-        catch(Exception e) {
+        } catch (Exception e) {
             try {
                 if (ois != null) ois.close();
 
@@ -80,8 +75,6 @@
     }
 
 
-
-
     @javafx.fxml.FXML
     public void BackToHeadManagerDashboardOnAction(ActionEvent actionEvent) throws IOException {
         FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml"));
@@ -93,10 +86,6 @@
     }
 
 
-
-
-
-
     @javafx.fxml.FXML
     public void monthlyrevenueOnAction(ActionEvent actionEvent) {
 
@@ -104,11 +93,10 @@
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml"));
 
             DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());
+        } catch (Exception e) {
         }
-        catch(Exception e){}
 
     }
-
 
 
     @javafx.fxml.FXML
@@ -118,8 +106,8 @@
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/PostAnnouncement.fxml"));
 
             DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());
+        } catch (Exception e) {
         }
-        catch(Exception e){}
 
     }
 
@@ -131,8 +119,8 @@
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/PerformanceReports.fxml"));
 
             DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());
+        } catch (Exception e) {
         }
-        catch(Exception e){}
 
     }
 
@@ -144,8 +132,8 @@
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/ViewBudget.fxml"));
 
             DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());
+        } catch (Exception e) {
         }
-        catch(Exception e){}
 
     }
 
@@ -157,8 +145,8 @@
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/ViewCustomerReviews.fxml"));
 
             DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());
+        } catch (Exception e) {
         }
-        catch(Exception e){}
 
     }
 
@@ -170,13 +158,19 @@
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelHeadManager/ViewStaffIquiries.fxml"));
 
             DashboardBorderPaneHeadManager.setRight(fxmlLoader.load());
+        } catch (Exception e) {
         }
-        catch(Exception e){}
 
     }
 
 
     @javafx.fxml.FXML
-    public void HeadManagerLogoutOnAction(ActionEvent actionEvent) {
+    public void HeadManagerLogoutOnAction(ActionEvent actionEvent) throws IOException {
+        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/Login/Signin.fxml"));
+        Scene scene = new Scene(fxmlLoader.load());
+        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());
+        stage.setTitle("Hello");
+        stage.setScene(scene);
+        stage.show();
     }
 }
\ No newline at end of file
Index: src/main/java/cse/fivestarhotel/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n\r\n\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        stage.setTitle(\"Sign in!\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HelloApplication.java b/src/main/java/cse/fivestarhotel/HelloApplication.java
--- a/src/main/java/cse/fivestarhotel/HelloApplication.java	(revision 5e0ee62ea436f1fd072aca4fbd75190c0c5adeea)
+++ b/src/main/java/cse/fivestarhotel/HelloApplication.java	(date 1734114512045)
@@ -10,7 +10,7 @@
     public void start(Stage stage) throws IOException {
 
 
-        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml"));
+        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/Login/signIn.fxml"));
         Scene scene = new Scene(fxmlLoader.load());
         stage.setTitle("Sign in!");
         stage.setScene(scene);
Index: src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.HotelGuest;\r\n\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class HotelGuestDashboardController\r\n{\r\n    @javafx.fxml.FXML\r\n    private BorderPane DashboardBorderPaneHotelGuest;\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void BackToDashboardOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/HotelGuestDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void resturanttablebookingOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/resturantPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void viewmenuOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ViewMenu.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GuestroomserviceOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/RoomServiceReq.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void laundrybookingOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/LaundryPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void transportationbookingOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/TransportationDetailsPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GuestReviewsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ReviewsPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n    @Deprecated\r\n    public void ResturantReviewOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ResturantReview.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n    @Deprecated\r\n    public void HotelReviewOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ReviewROOMpage.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void eventbookingOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/EventReservationPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GuestLogoutOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/Login/GuestLogin.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void ResGuestReviewsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ResturantReview.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java b/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java
--- a/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java	(revision 5e0ee62ea436f1fd072aca4fbd75190c0c5adeea)
+++ b/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java	(date 1734113976474)
@@ -22,14 +22,6 @@
 
 
 
-
-
-
-
-
-
-
-
     @javafx.fxml.FXML
     public void BackToDashboardOnAction(ActionEvent actionEvent) throws IOException {
         FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelGuest/HotelGuestDashboard.fxml"));
Index: src/main/java/cse/fivestarhotel/Login/StaffLoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.Login;\r\n\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\n\r\npublic class StaffLoginController {\r\n    @javafx.fxml.FXML\r\n    private PasswordField StaffPasswordField;\r\n    @javafx.fxml.FXML\r\n    private ComboBox<String> positionComboBox;\r\n    @javafx.fxml.FXML\r\n    private TextField StaffIdTextField;\r\n\r\n\r\n\r\n\r\n\r\n    // Called when the FXML is loaded\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n        positionComboBox.getItems().addAll(\"CEO\", \"Head Manager\",\"Front Desk Staff\",\"Restaurant Manager\",\"Room Service Manager\",\"Room Service Worker\",\"Electrician\");\r\n        // Create the binary file with hardcoded data (overwrite existing data)\r\n        frontDeskStaffWrite();\r\n        headmanagerWrite();\r\n        resmanagerWrite();\r\n        roommanagerWrite();\r\n        roomeorkerWrite();\r\n        ceoWrite();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Method to create and write hardcoded FrontDeskStaff data\r\n    public ObservableList<FrontDeskStaff> frontDeskStaffWrite() {\r\n        // Hardcoded values\r\n        String id1 = \"Farhan\";\r\n        String password1 = \"1234\";\r\n\r\n        ObservableList<FrontDeskStaff> frontDeskStaffList = FXCollections.observableArrayList();\r\n\r\n        // Adding FrontDeskStaff objects to the list\r\n        frontDeskStaffList.add(new FrontDeskStaff(id1, password1));\r\n\r\n        // Overwrite file instead of appending\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"FrontDeskStaff.bin\", false))) {\r\n            for (FrontDeskStaff staff : frontDeskStaffList) {\r\n                oos.writeObject(staff); // Write each object to the file\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return frontDeskStaffList;\r\n\r\n    }\r\n\r\n\r\n\r\n    public ObservableList<HotelHeadManager> headmanagerWrite() {\r\n        // Hardcoded values\r\n        String headid = \"Jenin\";\r\n        String headpass = \"2222\";\r\n\r\n        ObservableList<HotelHeadManager> headmanagerList = FXCollections.observableArrayList();\r\n\r\n        // Adding FrontDeskStaff objects to the list\r\n        headmanagerList.add(new HotelHeadManager(headid, headpass));\r\n\r\n        // Overwrite file instead of appending\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"HotelHeadManager.bin\", false))) {\r\n            for (HotelHeadManager head : headmanagerList) {\r\n                oos.writeObject(head); // Write each object to the file\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return headmanagerList;\r\n\r\n    }\r\n\r\n\r\n    public ObservableList<RestaurantManager> resmanagerWrite() {\r\n        // Hardcoded values\r\n        String resid = \"Sadeque\";\r\n        String respass = \"mama\";\r\n\r\n        ObservableList<RestaurantManager> resmanagerList = FXCollections.observableArrayList();\r\n\r\n        // Adding FrontDeskStaff objects to the list\r\n        resmanagerList.add(new RestaurantManager(resid,respass));\r\n\r\n        // Overwrite file instead of appending\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"RestaurantManager.bin\", false))) {\r\n            for (RestaurantManager res : resmanagerList) {\r\n                oos.writeObject(res); // Write each object to the file\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return resmanagerList;\r\n\r\n    }\r\n\r\n    public ObservableList<RoomServiceManager> roommanagerWrite() {\r\n\r\n        String roomid = \"Rehnuma\";\r\n        String roompass = \"3333\";\r\n\r\n        ObservableList<RoomServiceManager> roommanagerList = FXCollections.observableArrayList();\r\n\r\n        roommanagerList.add(new RoomServiceManager(roomid,roompass));\r\n\r\n\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"RoomManager.bin\", false))) {\r\n            for (RoomServiceManager room : roommanagerList) {\r\n                oos.writeObject(room);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roommanagerList;\r\n\r\n    }\r\n\r\n\r\n    public ObservableList<RoomServiceWorker> roomeorkerWrite() {\r\n\r\n        String roomWid = \"Rose\";\r\n        String roomWpass = \"4444\";\r\n\r\n        ObservableList<RoomServiceWorker> roomworkerList = FXCollections.observableArrayList();\r\n\r\n        roomworkerList.add(new RoomServiceWorker(roomWid,roomWpass));\r\n\r\n\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"RoomWorker.bin\", false))) {\r\n            for (RoomServiceWorker roomW : roomworkerList) {\r\n                oos.writeObject(roomW);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roomworkerList;\r\n\r\n    }\r\n\r\n\r\n    public ObservableList<CEO> ceoWrite() {\r\n\r\n        String ceoid = \"Rafid\";\r\n        String ceopass = \"ayo\";\r\n\r\n        ObservableList<CEO> ceoList = FXCollections.observableArrayList();\r\n\r\n        ceoList.add(new CEO(ceoid,ceopass));\r\n\r\n\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"CEO.bin\", false))) {\r\n            for (CEO c : ceoList) {\r\n                oos.writeObject(c);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return ceoList;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Action handler for the login button\r\n    @javafx.fxml.FXML\r\n    public void StaffLogInOnAction(ActionEvent actionEvent) {\r\n        String id = StaffIdTextField.getText();\r\n        String password = StaffPasswordField.getText();\r\n        String position = positionComboBox.getValue();\r\n\r\n        if (position == null || id.isEmpty() || password.isEmpty()) {   //empty check\r\n            System.out.println(\"Please fill in all fields.\");\r\n            return;\r\n        }\r\n\r\n        if (position.equals(\"Front Desk Staff\")) {    // verify\r\n            ObservableList<FrontDeskStaff> staffList = frontDeskStaffRead();\r\n\r\n            boolean isAuthenticated = staffList.stream()\r\n                    .anyMatch(staff -> staff.getId().equals(id) && staff.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"FrontDeskStaff Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n        } else if (position.equals(\"Head Manager\")) {    // verify Hotel Head Manager\r\n            ObservableList<HotelHeadManager> headList = headmanagerRead();\r\n\r\n            boolean isAuthenticated = headList.stream()\r\n                    .anyMatch(head -> head.getId().equals(id) && head.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Head Manager Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n\r\n        } else if (position.equals(\"Restaurant Manager\")) {    // verify Hotel Head Manager\r\n            ObservableList<RestaurantManager> resList = resManagerRead();\r\n\r\n            boolean isAuthenticated = resList.stream()\r\n                    .anyMatch(res -> res.getId().equals(id) && res.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Restaurant Manager Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n        } else if (position.equals(\"Room Service Manager\")) {    // verify Hotel Head Manager\r\n            ObservableList<RoomServiceManager> roomList = roomManagerRead();\r\n\r\n            boolean isAuthenticated = roomList.stream()\r\n                    .anyMatch(room -> room.getId().equals(id) && room.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RoomServiceManager/RoomServiceManagerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Room Service Manager Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n        } else if (position.equals(\"CEO\")) {    // verify Hotel Head Manager\r\n            ObservableList<CEO> ceoList = ceoRead();\r\n\r\n            boolean isAuthenticated = ceoList.stream()\r\n                    .anyMatch(c -> c.getId().equals(id) && c.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/CEO/CEODashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"CEO Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n\r\n        } else if (position.equals(\"Room Service Worker\")) {    // verify Hotel Head Manager\r\n            ObservableList<RoomServiceWorker> roomWList = roomworkerRead();\r\n\r\n            boolean isAuthenticated = roomWList.stream()\r\n                    .anyMatch(roomW -> roomW.getId().equals(id) && roomW.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RoomServiceWorker/RoomServiceWorkerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Room Service Worker Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n\r\n\r\n        } else {\r\n            System.out.println(\"Invalid position selected.\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // read FrontDeskStaff data\r\n    public ObservableList<FrontDeskStaff> frontDeskStaffRead() {\r\n        ObservableList<FrontDeskStaff> frontDeskStaffList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"FrontDeskStaff.bin\"))) {\r\n            while (true) {\r\n                frontDeskStaffList.add((FrontDeskStaff) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return frontDeskStaffList;\r\n    }\r\n\r\n\r\n    // read Head Manager data\r\n    public ObservableList<HotelHeadManager> headmanagerRead() {\r\n        ObservableList<HotelHeadManager> headmanagerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"HotelHeadManager.bin\"))) {\r\n            while (true) {\r\n                headmanagerList.add((HotelHeadManager) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return headmanagerList;\r\n    }\r\n\r\n    // read Restaurant Manager data\r\n    public ObservableList<RestaurantManager> resManagerRead() {\r\n        ObservableList<RestaurantManager> resmanagerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"RestaurantManager.bin\"))) {\r\n            while (true) {\r\n                resmanagerList.add((RestaurantManager) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return resmanagerList;\r\n    }\r\n\r\n\r\n    // read Restaurant Manager data\r\n    public ObservableList<RoomServiceManager> roomManagerRead() {\r\n        ObservableList<RoomServiceManager> roommanagerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"RoomManager.bin\"))) {\r\n            while (true) {\r\n                roommanagerList.add((RoomServiceManager) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roommanagerList;\r\n    }\r\n\r\n    public ObservableList<RoomServiceWorker> roomworkerRead() {\r\n        ObservableList<RoomServiceWorker> roomworkerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"RoomWorker.bin\"))) {\r\n            while (true) {\r\n                roomworkerList.add((RoomServiceWorker) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roomworkerList;\r\n    }\r\n\r\n\r\n    public ObservableList<CEO> ceoRead() {\r\n        ObservableList<CEO> ceoList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"CEO.bin\"))) {\r\n            while (true) {\r\n                ceoList.add((CEO) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return ceoList;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void FromStaffReturnToSigninOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/Login/Signin.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java b/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java
--- a/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java	(revision 5e0ee62ea436f1fd072aca4fbd75190c0c5adeea)
+++ b/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java	(date 1734111162664)
@@ -460,7 +460,6 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-
         return ceoList;
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FarHanZzzz&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FarHanZzzz/FiveStarHotel.git&quot;,\r\n    &quot;accountId&quot;: &quot;05fd5f93-b42c-44cd-9acf-41986fd5422d&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pOTHwVPEYQNUAVmymNU9UCEMUe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cse.fivestarhotel.HelloApplication\" />\r\n      <module name=\"FiveStarHotel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\" />\r\n      <created>1732636037915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732636037915</updated>\r\n      <workItem from=\"1732691317064\" duration=\"1348000\" />\r\n      <workItem from=\"1732740293857\" duration=\"392000\" />\r\n      <workItem from=\"1732740700449\" duration=\"854000\" />\r\n      <workItem from=\"1732812843972\" duration=\"6000\" />\r\n      <workItem from=\"1732812928251\" duration=\"38000\" />\r\n      <workItem from=\"1732813016733\" duration=\"370000\" />\r\n      <workItem from=\"1732813603231\" duration=\"2575000\" />\r\n      <workItem from=\"1733947475473\" duration=\"786000\" />\r\n      <workItem from=\"1733948278263\" duration=\"481000\" />\r\n      <workItem from=\"1733948776583\" duration=\"630000\" />\r\n      <workItem from=\"1733949431710\" duration=\"1466000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalAccessException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5e0ee62ea436f1fd072aca4fbd75190c0c5adeea)
+++ b/.idea/workspace.xml	(date 1734114498631)
@@ -6,10 +6,10 @@
   <component name="ChangeListManager">
     <list default="true" id="f45a8678-6144-4ee8-b094-1a886ecfbc88" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboardController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
