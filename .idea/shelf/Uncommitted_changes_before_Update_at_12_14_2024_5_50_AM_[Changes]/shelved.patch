Index: src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.Login;\r\n\r\nimport cse.fivestarhotel.FrontDeskStaff.AppendableObjectOutputStream;\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\nimport java.time.LocalDate;\r\n\r\nimport static cse.fivestarhotel.FrontDeskStaff.alert.showAlert;\r\n\r\npublic class CreateanAccountController implements Serializable\r\n{\r\n\r\n    @javafx.fxml.FXML\r\n    private PasswordField CreateAnAccountPasswordPasswordField;\r\n    @javafx.fxml.FXML\r\n    private DatePicker CreateAnAccountBirthdayDatepicker;\r\n    @javafx.fxml.FXML\r\n    private TextField CreateAnAccountNameTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField CreateAnAccountemailTextField;\r\n\r\n    ObservableList<CreateAccount> createlist = FXCollections.observableArrayList();\r\n    @javafx.fxml.FXML\r\n    private Label StatusLabel;\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void CreateAccountOnAction(ActionEvent actionEvent) {\r\n        String name = CreateAnAccountNameTextField.getText();\r\n        String password = CreateAnAccountPasswordPasswordField.getText();\r\n        LocalDate date = CreateAnAccountBirthdayDatepicker.getValue();\r\n        String email = CreateAnAccountemailTextField.getText();\r\n\r\n        if (name.isEmpty() || password.isEmpty() || date == null || email.isEmpty()){\r\n            showAlert(\"error\", \"please fill all the fields\");\r\n        }\r\n\r\n        if (!isValidEmail(email)) {\r\n            showAlert(\"error\",\"Invalid email address.\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (date.isBefore(LocalDate.now())) {\r\n            showAlert(\"error\",\"Checkout date cannot be in the past!\");\r\n            return;\r\n        }\r\n\r\n        //int num = 8;\r\n\r\n        if (password.length() < 9) {\r\n           showAlert(\"error\",\"please make it bigger\");\r\n            return;\r\n        }\r\n\r\n\r\n        //String name, String email, String password, LocalDate birthdate\r\n        CreateAccount c = new CreateAccount(name,email,password,date);\r\n        createlist.add(c);\r\n\r\n        try {\r\n            File f = new File(\"CreateAccountOfGuest.bin\");\r\n            FileOutputStream fos;\r\n            ObjectOutputStream oos;\r\n\r\n\r\n            if (f.exists()) {\r\n                fos = new FileOutputStream(f, true);\r\n                oos = new AppendableObjectOutputStream(fos);\r\n            } else {\r\n                fos = new FileOutputStream(f);\r\n                oos = new ObjectOutputStream(fos);\r\n            }\r\n\r\n            // Write the object\r\n            oos.writeObject(c);\r\n\r\n            StatusLabel.setText(\"Account Successfully Created!!!\");\r\n            oos.close();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void BackToGuestLoginOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/Login/GuestLogin.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static boolean isValidEmail(String email) {\r\n        String emailRegex = \"^[a-zA-Z0-9_+&*-]+(?:\\\\.[a-zA-Z0-9_+&*-]+)*@\" +\r\n                \"(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}$\";\r\n        return email != null && email.matches(emailRegex);\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java b/src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java
--- a/src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java	(revision a9f24beebb356177da035cc1d1506a6148b99ea6)
+++ b/src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java	(date 1734131121935)
@@ -56,7 +56,7 @@
         }
 
 
-        if (date.isBefore(LocalDate.now())) {
+        if (date.isAfter(LocalDate.now())) {
             showAlert("error","Checkout date cannot be in the past!");
             return;
         }
Index: src/main/java/cse/fivestarhotel/Login/StaffLoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.Login;\r\n\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\n\r\npublic class StaffLoginController {\r\n    @javafx.fxml.FXML\r\n    private PasswordField StaffPasswordField;\r\n    @javafx.fxml.FXML\r\n    private ComboBox<String> positionComboBox;\r\n    @javafx.fxml.FXML\r\n    private TextField StaffIdTextField;\r\n\r\n\r\n\r\n\r\n\r\n    // Called when the FXML is loaded\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n        positionComboBox.getItems().addAll(\"CEO\", \"Head Manager\",\"Front Desk Staff\",\"Restaurant Manager\",\"Room Service Manager\",\"Room Service Worker\",\"Electrician\");\r\n        // Create the binary file with hardcoded data (overwrite existing data)\r\n        frontDeskStaffWrite();\r\n        headmanagerWrite();\r\n        resmanagerWrite();\r\n        roommanagerWrite();\r\n        roomeorkerWrite();\r\n        ceoWrite();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Method to create and write hardcoded FrontDeskStaff data\r\n    public ObservableList<FrontDeskStaff> frontDeskStaffWrite() {\r\n        // Hardcoded values\r\n        String id1 = \"Farhan\";\r\n        String password1 = \"1234\";\r\n\r\n        ObservableList<FrontDeskStaff> frontDeskStaffList = FXCollections.observableArrayList();\r\n\r\n        // Adding FrontDeskStaff objects to the list\r\n        frontDeskStaffList.add(new FrontDeskStaff(id1, password1));\r\n\r\n        // Overwrite file instead of appending\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"FrontDeskStaff.bin\", false))) {\r\n            for (FrontDeskStaff staff : frontDeskStaffList) {\r\n                oos.writeObject(staff); // Write each object to the file\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return frontDeskStaffList;\r\n\r\n    }\r\n\r\n\r\n\r\n    public ObservableList<HotelHeadManager> headmanagerWrite() {\r\n        // Hardcoded values\r\n        String headid = \"Jenin\";\r\n        String headpass = \"2222\";\r\n\r\n        ObservableList<HotelHeadManager> headmanagerList = FXCollections.observableArrayList();\r\n\r\n        // Adding FrontDeskStaff objects to the list\r\n        headmanagerList.add(new HotelHeadManager(headid, headpass));\r\n\r\n        // Overwrite file instead of appending\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"HotelHeadManager.bin\", false))) {\r\n            for (HotelHeadManager head : headmanagerList) {\r\n                oos.writeObject(head); // Write each object to the file\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return headmanagerList;\r\n\r\n    }\r\n\r\n\r\n    public ObservableList<RestaurantManager> resmanagerWrite() {\r\n        // Hardcoded values\r\n        String resid = \"Sadeque\";\r\n        String respass = \"mama\";\r\n\r\n        ObservableList<RestaurantManager> resmanagerList = FXCollections.observableArrayList();\r\n\r\n        // Adding FrontDeskStaff objects to the list\r\n        resmanagerList.add(new RestaurantManager(resid,respass));\r\n\r\n        // Overwrite file instead of appending\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"RestaurantManager.bin\", false))) {\r\n            for (RestaurantManager res : resmanagerList) {\r\n                oos.writeObject(res); // Write each object to the file\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return resmanagerList;\r\n\r\n    }\r\n\r\n    public ObservableList<RoomServiceManager> roommanagerWrite() {\r\n\r\n        String roomid = \"Rehnuma\";\r\n        String roompass = \"3333\";\r\n\r\n        ObservableList<RoomServiceManager> roommanagerList = FXCollections.observableArrayList();\r\n\r\n        roommanagerList.add(new RoomServiceManager(roomid,roompass));\r\n\r\n\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"RoomManager.bin\", false))) {\r\n            for (RoomServiceManager room : roommanagerList) {\r\n                oos.writeObject(room);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roommanagerList;\r\n\r\n    }\r\n\r\n\r\n    public ObservableList<RoomServiceWorker> roomeorkerWrite() {\r\n\r\n        String roomWid = \"Rose\";\r\n        String roomWpass = \"4444\";\r\n\r\n        ObservableList<RoomServiceWorker> roomworkerList = FXCollections.observableArrayList();\r\n\r\n        roomworkerList.add(new RoomServiceWorker(roomWid,roomWpass));\r\n\r\n\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"RoomWorker.bin\", false))) {\r\n            for (RoomServiceWorker roomW : roomworkerList) {\r\n                oos.writeObject(roomW);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roomworkerList;\r\n\r\n    }\r\n\r\n\r\n    public ObservableList<CEO> ceoWrite() {\r\n\r\n        String ceoid = \"Rafid\";\r\n        String ceopass = \"ayo\";\r\n\r\n        ObservableList<CEO> ceoList = FXCollections.observableArrayList();\r\n\r\n        ceoList.add(new CEO(ceoid,ceopass));\r\n\r\n\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"CEO.bin\", false))) {\r\n            for (CEO c : ceoList) {\r\n                oos.writeObject(c);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return ceoList;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Action handler for the login button\r\n    @javafx.fxml.FXML\r\n    public void StaffLogInOnAction(ActionEvent actionEvent) {\r\n        String id = StaffIdTextField.getText();\r\n        String password = StaffPasswordField.getText();\r\n        String position = positionComboBox.getValue();\r\n\r\n        if (position == null || id.isEmpty() || password.isEmpty()) {   //empty check\r\n            System.out.println(\"Please fill in all fields.\");\r\n            return;\r\n        }\r\n\r\n        if (position.equals(\"Front Desk Staff\")) {    // verify\r\n            ObservableList<FrontDeskStaff> staffList = frontDeskStaffRead();\r\n\r\n            boolean isAuthenticated = staffList.stream()\r\n                    .anyMatch(staff -> staff.getId().equals(id) && staff.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"FrontDeskStaff Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n        } else if (position.equals(\"Head Manager\")) {    // verify Hotel Head Manager\r\n            ObservableList<HotelHeadManager> headList = headmanagerRead();\r\n\r\n            boolean isAuthenticated = headList.stream()\r\n                    .anyMatch(head -> head.getId().equals(id) && head.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Head Manager Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n\r\n        } else if (position.equals(\"Restaurant Manager\")) {    // verify Hotel Head Manager\r\n            ObservableList<RestaurantManager> resList = resManagerRead();\r\n\r\n            boolean isAuthenticated = resList.stream()\r\n                    .anyMatch(res -> res.getId().equals(id) && res.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Restaurant Manager Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n        } else if (position.equals(\"Room Service Manager\")) {    // verify Hotel Head Manager\r\n            ObservableList<RoomServiceManager> roomList = roomManagerRead();\r\n\r\n            boolean isAuthenticated = roomList.stream()\r\n                    .anyMatch(room -> room.getId().equals(id) && room.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RoomServiceManager/RoomServiceManagerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Room Service Manager Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n        } else if (position.equals(\"CEO\")) {    // verify Hotel Head Manager\r\n            ObservableList<CEO> ceoList = ceoRead();\r\n\r\n            boolean isAuthenticated = ceoList.stream()\r\n                    .anyMatch(c -> c.getId().equals(id) && c.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/CEO/CEODashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"CEO Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n\r\n        } else if (position.equals(\"Room Service Worker\")) {    // verify Hotel Head Manager\r\n            ObservableList<RoomServiceWorker> roomWList = roomworkerRead();\r\n\r\n            boolean isAuthenticated = roomWList.stream()\r\n                    .anyMatch(roomW -> roomW.getId().equals(id) && roomW.getPassword().equals(password));\r\n\r\n            if (isAuthenticated) {   // go to dashboard\r\n                try {\r\n                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RoomServiceWorker/RoomServiceWorkerDashboard.fxml\"));\r\n                    Scene scene = new Scene(fxmlLoader.load());\r\n                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n                    stage.setTitle(\"Room Service Worker Dashboard\");\r\n                    stage.setScene(scene);\r\n                    stage.show();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n\r\n                System.out.println(\"Invalid ID or password.\");\r\n            }\r\n\r\n\r\n\r\n\r\n        } else {\r\n            System.out.println(\"Invalid position selected.\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // read FrontDeskStaff data\r\n    public ObservableList<FrontDeskStaff> frontDeskStaffRead() {\r\n        ObservableList<FrontDeskStaff> frontDeskStaffList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"FrontDeskStaff.bin\"))) {\r\n            while (true) {\r\n                frontDeskStaffList.add((FrontDeskStaff) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return frontDeskStaffList;\r\n    }\r\n\r\n\r\n    // read Head Manager data\r\n    public ObservableList<HotelHeadManager> headmanagerRead() {\r\n        ObservableList<HotelHeadManager> headmanagerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"HotelHeadManager.bin\"))) {\r\n            while (true) {\r\n                headmanagerList.add((HotelHeadManager) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return headmanagerList;\r\n    }\r\n\r\n    // read Restaurant Manager data\r\n    public ObservableList<RestaurantManager> resManagerRead() {\r\n        ObservableList<RestaurantManager> resmanagerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"RestaurantManager.bin\"))) {\r\n            while (true) {\r\n                resmanagerList.add((RestaurantManager) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return resmanagerList;\r\n    }\r\n\r\n\r\n    // read Restaurant Manager data\r\n    public ObservableList<RoomServiceManager> roomManagerRead() {\r\n        ObservableList<RoomServiceManager> roommanagerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"RoomManager.bin\"))) {\r\n            while (true) {\r\n                roommanagerList.add((RoomServiceManager) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roommanagerList;\r\n    }\r\n\r\n    public ObservableList<RoomServiceWorker> roomworkerRead() {\r\n        ObservableList<RoomServiceWorker> roomworkerList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"RoomWorker.bin\"))) {\r\n            while (true) {\r\n                roomworkerList.add((RoomServiceWorker) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return roomworkerList;\r\n    }\r\n\r\n\r\n    public ObservableList<CEO> ceoRead() {\r\n        ObservableList<CEO> ceoList = FXCollections.observableArrayList();\r\n\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"CEO.bin\"))) {\r\n            while (true) {\r\n                ceoList.add((CEO) ois.readObject());\r\n            }\r\n        } catch (EOFException eof) {\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return ceoList;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void FromStaffReturnToSigninOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/Login/Signin.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java b/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java
--- a/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java	(revision a9f24beebb356177da035cc1d1506a6148b99ea6)
+++ b/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java	(date 1734130821518)
@@ -38,6 +38,7 @@
         roommanagerWrite();
         roomeorkerWrite();
         ceoWrite();
+        eleWrite();
     }
 
 
@@ -188,6 +189,30 @@
 
 
 
+    public ObservableList<Electrician> eleWrite() {
+
+        String eleid = "Shafiq";
+        String elepass = "ayoo";
+
+        ObservableList<Electrician> eleList = FXCollections.observableArrayList();
+
+        eleList.add(new Electrician(eleid,elepass));
+
+
+        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("elect.bin", false))) {
+            for (Electrician ele : eleList) {
+                oos.writeObject(ele);
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        return eleList;
+
+    }
+
+
+
 
 
 
@@ -346,6 +371,32 @@
 
 
 
+        } else if (position.equals("Electrician")) {    // verify Hotel Head Manager
+            ObservableList<Electrician> eleList = eleRead();
+
+            boolean isAuthenticated = eleList.stream()
+                    .anyMatch(ele -> ele.getId().equals(id) && ele.getPassword().equals(password));
+
+            if (isAuthenticated) {   // go to dashboard
+                try {
+                    FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/Electrician/ElectricianDashboard.fxml"));
+                    Scene scene = new Scene(fxmlLoader.load());
+                    Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());
+                    stage.setTitle("Electrician Dashboard");
+                    stage.setScene(scene);
+                    stage.show();
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+            } else {
+
+                System.out.println("Invalid ID or password.");
+            }
+
+
+
+
+
         } else {
             System.out.println("Invalid position selected.");
         }
@@ -465,6 +516,22 @@
     }
 
 
+    public ObservableList<Electrician> eleRead() {
+        ObservableList<Electrician> eleList = FXCollections.observableArrayList();
+
+        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("CEO.bin"))) {
+            while (true) {
+                eleList.add((Electrician) ois.readObject());
+            }
+        } catch (EOFException eof) {
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return eleList;
+    }
+
 
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_12_05_AM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_12_05_AM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_05_AM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_05_AM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_06_AM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_06_AM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CreateAccountOfGuest.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CreateAccountOfGuest.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/HeadManager.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/HotelGuestReview.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/LaundryInfo.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/QueryReview.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/RestaurantManagerPerformance.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/TransportationDetails.bin\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FarHanZzzz&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FarHanZzzz/FiveStarHotel.git&quot;,\r\n    &quot;accountId&quot;: &quot;6a6a6314-c7b1-47a3-a0ee-4d945d400db2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pOTHwVPEYQNUAVmymNU9UCEMUe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.HelloApplication.executor\": \"Run\",\r\n    \"Application.main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.sourceCode.Java\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cse.fivestarhotel.HelloApplication\" />\r\n      <module name=\"FiveStarHotel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\" />\r\n      <created>1732636037915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732636037915</updated>\r\n      <workItem from=\"1732691317064\" duration=\"1348000\" />\r\n      <workItem from=\"1732740293857\" duration=\"392000\" />\r\n      <workItem from=\"1732740700449\" duration=\"854000\" />\r\n      <workItem from=\"1732812843972\" duration=\"6000\" />\r\n      <workItem from=\"1732812928251\" duration=\"38000\" />\r\n      <workItem from=\"1732813016733\" duration=\"370000\" />\r\n      <workItem from=\"1732813603231\" duration=\"2575000\" />\r\n      <workItem from=\"1733947475473\" duration=\"786000\" />\r\n      <workItem from=\"1733948278263\" duration=\"481000\" />\r\n      <workItem from=\"1733948776583\" duration=\"630000\" />\r\n      <workItem from=\"1733949431710\" duration=\"1466000\" />\r\n      <workItem from=\"1734126651964\" duration=\"1102000\" />\r\n      <workItem from=\"1734127776550\" duration=\"1041000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalAccessException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a9f24beebb356177da035cc1d1506a6148b99ea6)
+++ b/.idea/workspace.xml	(date 1734133593039)
@@ -5,25 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="f45a8678-6144-4ee8-b094-1a886ecfbc88" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_12_05_AM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_12_05_AM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_05_AM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_05_AM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_06_AM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_7_2024_4_06_AM__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CreateAccountOfGuest.bin" beforeDir="false" afterPath="$PROJECT_DIR$/CreateAccountOfGuest.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/HeadManager.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/HotelGuestReview.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/LaundryInfo.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/QueryReview.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/RestaurantManagerPerformance.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/TransportationDetails.bin" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/CreateanAccountController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/HotelHeadManager/HeadManagerDashboard.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -71,28 +56,28 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.HelloApplication.executor": "Run",
-    "Application.main.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "master",
-    "ignore.virus.scanning.warn.message": "true",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "preferences.sourceCode.Java",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
+    &quot;Application.main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="main" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="cse.fivestarhotel.HelloApplication" />
@@ -130,7 +115,7 @@
       <workItem from="1733948776583" duration="630000" />
       <workItem from="1733949431710" duration="1466000" />
       <workItem from="1734126651964" duration="1102000" />
-      <workItem from="1734127776550" duration="1041000" />
+      <workItem from="1734127776550" duration="5500000" />
     </task>
     <servers />
   </component>
Index: src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.chart.NumberAxis?>\r\n<?import javafx.scene.chart.StackedAreaChart?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.shape.Line?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<AnchorPane prefHeight=\"720.0\" prefWidth=\"936.0\" style=\"-fx-background-color: #C7C0A7;\" xmlns=\"http://javafx.com/javafx/23\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"cse.fivestarhotel.HotelHeadManager.MonthlyRevenueController\">\r\n   <children>\r\n      <Line endX=\"730.0\" layoutX=\"202.0\" layoutY=\"88.0\" startX=\"-202.00001525878906\" stroke=\"#8c8c7b\" strokeWidth=\"2.0\" />\r\n      <Text fill=\"#0f4a33\" layoutX=\"22.0\" layoutY=\"60.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"⮯ Revenue Reports\">\r\n         <font>\r\n            <Font name=\"Bell MT Bold\" size=\"45.0\" />\r\n         </font>\r\n      </Text>\r\n      <Text fill=\"#000000aa\" layoutX=\"31.0\" layoutY=\"143.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"❍ Submit Revenue Report\" wrappingWidth=\"343.15125274658203\">\r\n         <font>\r\n            <Font name=\"System Bold\" size=\"27.0\" />\r\n         </font>\r\n      </Text>\r\n      <StackedAreaChart layoutX=\"14.0\" layoutY=\"373.0\" prefHeight=\"335.0\" prefWidth=\"908.0\">\r\n        <xAxis>\r\n          <NumberAxis side=\"BOTTOM\" />\r\n        </xAxis>\r\n        <yAxis>\r\n          <NumberAxis side=\"LEFT\" />\r\n        </yAxis>\r\n      </StackedAreaChart>\r\n      <TextField layoutX=\"312.0\" layoutY=\"181.0\" prefHeight=\"41.0\" prefWidth=\"232.0\" style=\"-fx-background-color: #B6A990;\" />\r\n      <Text layoutX=\"66.0\" layoutY=\"208.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Total Revenue ($):\" wrappingWidth=\"244.80333709716797\">\r\n         <font>\r\n            <Font name=\"Consolas\" size=\"23.0\" />\r\n         </font>\r\n      </Text>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml b/src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml
--- a/src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml	(revision a9f24beebb356177da035cc1d1506a6148b99ea6)
+++ b/src/main/resources/cse/fivestarhotel/HotelHeadManager/MonthlyRevenue.fxml	(date 1734133149145)
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<?import javafx.scene.chart.NumberAxis?>
-<?import javafx.scene.chart.StackedAreaChart?>
 <?import javafx.scene.control.TextField?>
+<?import javafx.scene.image.Image?>
+<?import javafx.scene.image.ImageView?>
 <?import javafx.scene.layout.AnchorPane?>
 <?import javafx.scene.shape.Line?>
 <?import javafx.scene.text.Font?>
@@ -16,24 +16,39 @@
             <Font name="Bell MT Bold" size="45.0" />
          </font>
       </Text>
-      <Text fill="#000000aa" layoutX="31.0" layoutY="143.0" strokeType="OUTSIDE" strokeWidth="0.0" text="❍ Submit Revenue Report" wrappingWidth="343.15125274658203">
+      <Text fill="#000000aa" layoutX="31.0" layoutY="166.0" strokeType="OUTSIDE" strokeWidth="0.0" text="❍ Submit Revenue Report" wrappingWidth="343.15125274658203">
          <font>
             <Font name="System Bold" size="27.0" />
          </font>
       </Text>
-      <StackedAreaChart layoutX="14.0" layoutY="373.0" prefHeight="335.0" prefWidth="908.0">
-        <xAxis>
-          <NumberAxis side="BOTTOM" />
-        </xAxis>
-        <yAxis>
-          <NumberAxis side="LEFT" />
-        </yAxis>
-      </StackedAreaChart>
-      <TextField layoutX="312.0" layoutY="181.0" prefHeight="41.0" prefWidth="232.0" style="-fx-background-color: #B6A990;" />
-      <Text layoutX="66.0" layoutY="208.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Total Revenue ($):" wrappingWidth="244.80333709716797">
+      <TextField layoutX="333.0" layoutY="217.0" prefHeight="41.0" prefWidth="232.0" style="-fx-background-color: #B6A990;" />
+      <Text layoutX="66.0" layoutY="244.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Total Revenue ($):" wrappingWidth="244.80333709716797">
+         <font>
+            <Font name="Consolas" size="23.0" />
+         </font>
+      </Text>
+      <TextField layoutX="333.0" layoutY="328.0" prefHeight="41.0" prefWidth="232.0" style="-fx-background-color: #B6A990;" />
+      <Text layoutX="66.0" layoutY="328.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Restaurant Department total Revenue ($):" wrappingWidth="244.80333709716797">
+         <font>
+            <Font name="Consolas" size="23.0" />
+         </font>
+      </Text>
+      <TextField layoutX="333.0" layoutY="448.0" prefHeight="41.0" prefWidth="232.0" style="-fx-background-color: #B6A990;" />
+      <Text layoutX="66.0" layoutY="447.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Room Service Department total Revenue ($):" wrappingWidth="244.80333709716797">
+         <font>
+            <Font name="Consolas" size="23.0" />
+         </font>
+      </Text>
+      <TextField layoutX="334.0" layoutY="560.0" prefHeight="41.0" prefWidth="232.0" style="-fx-background-color: #B6A990;" />
+      <Text layoutX="67.0" layoutY="561.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Transportation Department total Revenue ($):" wrappingWidth="244.80333709716797">
          <font>
             <Font name="Consolas" size="23.0" />
          </font>
       </Text>
+      <ImageView fitHeight="541.0" fitWidth="252.0" layoutX="656.0" layoutY="132.0" pickOnBounds="true" preserveRatio="true">
+         <image>
+            <Image url="@../Img/Untitled343_20241207021419.jpg" />
+         </image>
+      </ImageView>
    </children>
 </AnchorPane>
