Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.*;\r\n\r\nimport java.io.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GuestcheckoutController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private Label StatusLabel;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestcheckoutEmailTextfield;\r\n    @javafx.fxml.FXML\r\n    private TextArea checkoutTextArea;\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void CheckoutOnAction(ActionEvent actionEvent) throws FileNotFoundException {\r\n        String email = GuestcheckoutEmailTextfield.getText();\r\n\r\n\r\n        if (email.isEmpty()) {\r\n            StatusLabel.setText(\"Please fill the Email field\");\r\n        }\r\n\r\n        File file = new File(\"CheckInGuestDetails.bin\");\r\n        if (!file.exists()) {\r\n            StatusLabel.setText(\"No guest details found\");\r\n            return;\r\n        }\r\n\r\n        List<CheckInTableDummyClass> guestlist = new ArrayList<>();\r\n        CheckInTableDummyClass checkedoutGuest = null;\r\n\r\n\r\n        // Step 1: Read all objects and identify the one to delete\r\n        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file))) {\r\n            while (true) {\r\n                try {\r\n                    CheckInTableDummyClass guest = (CheckInTableDummyClass) ois.readObject();\r\n                    if (guest.getEmail().equalsIgnoreCase(email)) {\r\n                        checkedoutGuest = guest; // Found the guest to remove\r\n                    } else {\r\n                        guestlist.add(guest); // Keep all other guests\r\n                    }\r\n                } catch (EOFException e) {\r\n                    break; // End of file reached\r\n                } catch (ClassNotFoundException e) {\r\n                    e.printStackTrace();\r\n                    StatusLabel.setText(\"Class not found during object deserialization.\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n        } catch (FileNotFoundException e) {\r\n            StatusLabel.setText(\"The file does not exist.\");\r\n            e.printStackTrace();\r\n            return;\r\n        } catch (IOException e) {\r\n            StatusLabel.setText(\"Error reading guest details: \" + e.getMessage());\r\n            e.printStackTrace();\r\n            return;\r\n        }\r\n\r\n\r\n        // Check if the guest was found\r\n        if (checkedoutGuest == null) {\r\n            StatusLabel.setText(\"Guest with email \" + email + \" not found\");\r\n            return;\r\n        }\r\n\r\n\r\n        // Step 2: Rewrite the file with the remaining guests\r\n        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(file))) {\r\n            for (CheckInTableDummyClass guest : guestlist) {\r\n                oos.writeObject(guest);\r\n            }\r\n\r\n\r\n        } catch (IOException e) {\r\n            StatusLabel.setText(\"Error updating guest details: \" + e.getMessage());\r\n            e.printStackTrace();\r\n            return;\r\n        }\r\n\r\n\r\n        // Step 3: Show removed guest details\r\n        checkoutTextArea.setText(\"Checked out guest details:\\n\" + checkedoutGuest.toString());\r\n        StatusLabel.setText(\"Guest checked out successfully\");\r\n        GuestcheckoutEmailTextfield.clear();\r\n\r\n    }\r\n\r\n\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java	(date 1734094156025)
@@ -38,9 +38,10 @@
         }
 
         List<CheckInTableDummyClass> guestlist = new ArrayList<>();
+
+
         CheckInTableDummyClass checkedoutGuest = null;
 
-
         // Step 1: Read all objects and identify the one to delete
         try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file))) {
             while (true) {
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport cse.fivestarhotel.HotelGuest.Reviews;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.Serializable;\r\n\r\npublic class ViewHotelguestReviewsController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Reviews,String> nameCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Reviews,String> ratingCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Reviews,String> reviewCol;\r\n    @javafx.fxml.FXML\r\n    private TableView<Reviews> ReviewTableView;\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n\r\n        //String name, String rating, String review\r\n        nameCol.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\r\n        ratingCol.setCellValueFactory(new PropertyValueFactory<>(\"rating\"));\r\n        reviewCol.setCellValueFactory(new PropertyValueFactory<>(\"review\"));\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void ViewHotelGuestReviews(ActionEvent actionEvent) {\r\n        FileInputStream fis=null;\r\n        ObjectInputStream ois=null;\r\n\r\n\r\n        try{\r\n            File f = new File(\"HotelGuestReview.bin\");\r\n            if(f.exists()){\r\n                fis = new FileInputStream(f);\r\n            }\r\n            else{\r\n                //Alert: file does not exist\r\n            }\r\n            if(fis != null) ois = new ObjectInputStream(fis);\r\n\r\n            ReviewTableView.getItems().clear();\r\n\r\n            while(true) {\r\n                ReviewTableView.getItems().add((Reviews) ois.readObject());\r\n\r\n\r\n                //CheckinTableView.setItems(CheckinTabledataList);\r\n            }\r\n            //ois.close();\r\n\r\n        }\r\n        catch(Exception e) {\r\n            try {\r\n                if (ois != null) ois.close();\r\n\r\n            } catch (Exception e2) {\r\n                //\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java	(date 1734094436715)
@@ -26,7 +26,6 @@
     @javafx.fxml.FXML
     public void initialize() {
 
-
         //String name, String rating, String review
         nameCol.setCellValueFactory(new PropertyValueFactory<>("name"));
         ratingCol.setCellValueFactory(new PropertyValueFactory<>("rating"));
@@ -36,9 +35,6 @@
     }
 
 
-
-
-
     @javafx.fxml.FXML
     public void ViewHotelGuestReviews(ActionEvent actionEvent) {
         FileInputStream fis=null;
@@ -60,10 +56,8 @@
             while(true) {
                 ReviewTableView.getItems().add((Reviews) ois.readObject());
 
-
-                //CheckinTableView.setItems(CheckinTabledataList);
             }
-            //ois.close();
+
 
         }
         catch(Exception e) {
@@ -76,10 +70,5 @@
             }
 
         }
-
-
-
-
-
     }
 }
\ No newline at end of file
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.io.*;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n//import static cse.fivestarhotel.FrontDeskStaff.GuestcheckinController.EmailValidator.isValidEmail;\r\n\r\npublic class GuestcheckinController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private Label CheckInStatusLabel;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestEmailTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField NumberofRoomsTextField;\r\n    @javafx.fxml.FXML\r\n    private DatePicker CheckoutDatePicker;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestNameTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestContactNoTetField;\r\n    @javafx.fxml.FXML\r\n    private ComboBox<String> RoomTypeComboBox;\r\n\r\n\r\n    ObservableList<CheckInTableDummyClass> CheckinTabledataList = FXCollections.observableArrayList();\r\n\r\n\r\n\r\n\r\n\r\n    //ObservableList<Guest> GuestDetails = FXCollections.observableArrayList();\r\n\r\n\r\n\r\n     ArrayList<Integer> SingleRoom = new ArrayList<>();\r\n     ArrayList<Integer> DoubleeRoom = new ArrayList<>();\r\n     ArrayList<Integer> SuiteRoom = new ArrayList<>();\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    private TextArea GuestTextAreaDetails;\r\n\r\n\r\n    // ArrayList<CheckInTableDummyClass> CheckinTabledataList = new ArrayList<>();\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n\r\n\r\n        for (int i = 1; i <= 100; i++) {\r\n            if (i <= 50) SingleRoom.add(i); // 50 Single rooms\r\n            else if (i <= 80) DoubleeRoom.add(i); // 30 Double rooms\r\n            else SuiteRoom.add(i); // 20 Suite rooms\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        // combobox\r\n        RoomTypeComboBox.getItems().addAll(\"Single\", \"Double\", \"Suite\");\r\n\r\n\r\n\r\n        //String name, String email, String roomtype, Integer noofRooms, String roomnumber, LocalDate checkoutDate\r\n\r\n\r\n\r\n\r\n        //CheckinTabledataList.add(new CheckInTableDummyClass(\"John Doe\", \"john@example.com\", \"Single\", 1, \"101\", LocalDate.now()));\r\n\r\n        //CheckinTableView.setItems(CheckinTabledataList);\r\n//        CheckinTableView.refresh();\r\n\r\n    }\r\n\r\n\r\n// name,  email,  roomtype,  noofRooms,  roomnumber,  checkoutDate\r\n\r\n    @javafx.fxml.FXML\r\n    public void ClearFieldsOnAction(ActionEvent actionEvent) {\r\n        GuestNameTextField.clear();\r\n        GuestContactNoTetField.clear();\r\n        NumberofRoomsTextField.clear();\r\n        GuestEmailTextField.clear();\r\n        RoomTypeComboBox.setValue(null);\r\n        CheckoutDatePicker.setValue(null);\r\n        NumberofRoomsTextField.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void CheckInOnAction(ActionEvent actionEvent) {\r\n\r\n        String name = GuestNameTextField.getText();\r\n        String email = GuestEmailTextField.getText();\r\n        int contactno;\r\n        LocalDate checkoutDate = CheckoutDatePicker.getValue();\r\n        String roomtype = RoomTypeComboBox.getValue();\r\n        int noofRooms;\r\n\r\n\r\n\r\n        try {\r\n            noofRooms = Integer.parseInt(NumberofRoomsTextField.getText());\r\n            contactno = Integer.parseInt(GuestContactNoTetField.getText());\r\n\r\n        } catch (NumberFormatException e) {\r\n            CheckInStatusLabel.setText(\"Invalid number of Rooms\");\r\n            return;\r\n        }\r\n\r\n\r\n        // validating other inputs\r\n        if (name.isEmpty() || email.isEmpty() || roomtype.isEmpty() || noofRooms <= 0  ||  checkoutDate == null ){\r\n            CheckInStatusLabel.setText(\"Please fill all the fields\");\r\n        }\r\n\r\n\r\n        // Allocate rooms\r\n        List<Integer> allocatedRooms = allocateRooms(roomtype, noofRooms);\r\n        if (allocatedRooms.isEmpty()) {\r\n            CheckInStatusLabel.setText(\"Not enough rooms available for the selected type!\");\r\n            return;\r\n        }\r\n\r\n        String roomNumber = allocatedRooms.stream().map(String::valueOf).collect(Collectors.joining(\", \"));\r\n\r\n\r\n        CheckInTableDummyClass c = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate,contactno);\r\n        CheckinTabledataList.add(c);\r\n\r\n\r\n\r\n        try {\r\n            File f = new File(\"CheckInGuestDetails.bin\");\r\n            FileOutputStream fos;\r\n            ObjectOutputStream oos;\r\n\r\n\r\n            if (f.exists()) {\r\n                fos = new FileOutputStream(f, true);\r\n                oos = new AppendableObjectOutputStream(fos);\r\n            } else {\r\n                fos = new FileOutputStream(f);\r\n                oos = new ObjectOutputStream(fos);\r\n            }\r\n\r\n            // Write the object\r\n            oos.writeObject(c);\r\n\r\n            // Update UI\r\n            CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n            GuestTextAreaDetails.setText(\"Guest Details: \" + c.toString());\r\n\r\n            oos.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public List<Integer> allocateRooms(String roomtype , int noofRooms) {\r\n        List<Integer> roomList;\r\n        List<Integer> allocatedRooms = new ArrayList<>();\r\n\r\n        switch (roomtype) {\r\n            case \"Single\" -> roomList = SingleRoom;\r\n            case \"Double\" -> roomList = DoubleeRoom;\r\n            case \"Suite\" -> roomList = SuiteRoom;\r\n\r\n            default -> {\r\n                return allocatedRooms; // empty list if invalid\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // allocate room if avalidable\r\n        System.out.println(\"Room list for \" + roomtype + \": \" + roomList);\r\n\r\n        // roomlist = 50 , 3\r\n\r\n        if (roomList.size() >= noofRooms) {\r\n            for(int i = 0; i < noofRooms; i++){\r\n                allocatedRooms.add(roomList.remove(0));  // remove and allocate\r\n\r\n            }\r\n\r\n            System.out.println(\"1\"+ allocatedRooms);\r\n\r\n\r\n            // single 1 -50 =\r\n\r\n        }\r\n\r\n        else {\r\n            System.out.println(\"Insufficient rooms for \" + roomtype + \". Available: \" + roomList.size());\r\n\r\n        }\r\n\r\n\r\n        System.out.println(\"Final \"+ allocatedRooms);\r\n\r\n        return allocatedRooms;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //        // ends\r\n        //\r\n        //        //        CheckinTabledataList.add(new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate));\r\n        ////        for(CheckInTableDummyClass c: CheckinTabledataList){\r\n        ////            CheckinTableView.getItems().add(c);\r\n        ////            CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n        //\r\n        //        //CheckInTableDummyClass temp = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate);\r\n        ////        CheckinTabledataList.add(temp);\r\n        ////        CheckinTableView.refresh();\r\n        //        // String name, String email, String roomtype, Integer noofRooms, Integer roomnumber, LocalDate checkoutDate\r\n        //\r\n        //\r\n        //// main code of tableview\r\n        //\r\n        //\r\n        //\r\n        //            //Will create multiple file header issue while appending objects (class instances)\r\n        //\r\n        //        // append\r\n\r\n\r\n        //\r\n//                    if(f.exists()) {\r\n//                        fos = new FileOutputStream(f, true);\r\n//                        oos = new AppendableObjectOutputStream(fos);\r\n//                    }\r\n//                    else {\r\n//                        fos = new FileOutputStream(f);\r\n//                        oos = new ObjectOutputStream(fos);\r\n//                    }\r\n//\r\n//\r\n//\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java	(date 1734093800339)
@@ -58,34 +58,14 @@
     @javafx.fxml.FXML
     public void initialize() {
 
-
-
         for (int i = 1; i <= 100; i++) {
             if (i <= 50) SingleRoom.add(i); // 50 Single rooms
             else if (i <= 80) DoubleeRoom.add(i); // 30 Double rooms
             else SuiteRoom.add(i); // 20 Suite rooms
-
-
-
         }
 
-
-
-        // combobox
         RoomTypeComboBox.getItems().addAll("Single", "Double", "Suite");
 
-
-
-        //String name, String email, String roomtype, Integer noofRooms, String roomnumber, LocalDate checkoutDate
-
-
-
-
-        //CheckinTabledataList.add(new CheckInTableDummyClass("John Doe", "john@example.com", "Single", 1, "101", LocalDate.now()));
-
-        //CheckinTableView.setItems(CheckinTabledataList);
-//        CheckinTableView.refresh();
-
     }
 
 
@@ -103,12 +83,17 @@
 
     }
 
+    public static boolean isValidEmail(String email) {
+        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@" +
+                "(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
+        return email != null && email.matches(emailRegex);
+    }
+
 
 
 
     @javafx.fxml.FXML
     public void CheckInOnAction(ActionEvent actionEvent) {
-
         String name = GuestNameTextField.getText();
         String email = GuestEmailTextField.getText();
         int contactno;
@@ -116,8 +101,6 @@
         String roomtype = RoomTypeComboBox.getValue();
         int noofRooms;
 
-
-
         try {
             noofRooms = Integer.parseInt(NumberofRoomsTextField.getText());
             contactno = Integer.parseInt(GuestContactNoTetField.getText());
@@ -133,6 +116,12 @@
             CheckInStatusLabel.setText("Please fill all the fields");
         }
 
+        // email
+        if (!isValidEmail(email)) {
+            CheckInStatusLabel.setText("Invalid email address.");
+            return;
+        }
+
 
         // Allocate rooms
         List<Integer> allocatedRooms = allocateRooms(roomtype, noofRooms);
@@ -142,8 +131,6 @@
         }
 
         String roomNumber = allocatedRooms.stream().map(String::valueOf).collect(Collectors.joining(", "));
-
-
         CheckInTableDummyClass c = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate,contactno);
         CheckinTabledataList.add(c);
 
@@ -183,6 +170,8 @@
 
 
 
+
+
     public List<Integer> allocateRooms(String roomtype , int noofRooms) {
         List<Integer> roomList;
         List<Integer> allocatedRooms = new ArrayList<>();
@@ -196,82 +185,27 @@
                 return allocatedRooms; // empty list if invalid
 
             }
-
         }
 
         // allocate room if avalidable
         System.out.println("Room list for " + roomtype + ": " + roomList);
 
-        // roomlist = 50 , 3
-
         if (roomList.size() >= noofRooms) {
             for(int i = 0; i < noofRooms; i++){
                 allocatedRooms.add(roomList.remove(0));  // remove and allocate
-
             }
-
             System.out.println("1"+ allocatedRooms);
-
-
-            // single 1 -50 =
-
         }
-
         else {
             System.out.println("Insufficient rooms for " + roomtype + ". Available: " + roomList.size());
 
         }
-
-
         System.out.println("Final "+ allocatedRooms);
-
         return allocatedRooms;
     }
 
 
 
-
-
-
-
-
-
-        //        // ends
-        //
-        //        //        CheckinTabledataList.add(new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate));
-        ////        for(CheckInTableDummyClass c: CheckinTabledataList){
-        ////            CheckinTableView.getItems().add(c);
-        ////            CheckInStatusLabel.setText("Check-in successful! Rooms allocated: " + roomNumber);
-        //
-        //        //CheckInTableDummyClass temp = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate);
-        ////        CheckinTabledataList.add(temp);
-        ////        CheckinTableView.refresh();
-        //        // String name, String email, String roomtype, Integer noofRooms, Integer roomnumber, LocalDate checkoutDate
-        //
-        //
-        //// main code of tableview
-        //
-        //
-        //
-        //            //Will create multiple file header issue while appending objects (class instances)
-        //
-        //        // append
-
-
-        //
-//                    if(f.exists()) {
-//                        fos = new FileOutputStream(f, true);
-//                        oos = new AppendableObjectOutputStream(fos);
-//                    }
-//                    else {
-//                        fos = new FileOutputStream(f);
-//                        oos = new ObjectOutputStream(fos);
-//                    }
-//
-//
-//
-
-
     }
 
 
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport cse.fivestarhotel.HotelGuest.Reviews;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.io.Serializable;\r\n\r\npublic class SubmitQueriesController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private TextArea DescriptionTextArea;\r\n    @javafx.fxml.FXML\r\n    private ComboBox<String> PositionComboBox;\r\n    @javafx.fxml.FXML\r\n    private TextField nameTextField;\r\n    @javafx.fxml.FXML\r\n    private Label QueryStatusLabel;\r\n\r\n    ObservableList<Query> queries = FXCollections.observableArrayList();\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n        PositionComboBox.getItems().addAll(\"FrontDeskStaff\",\"Room Service Manager\",\"Restarant Manager\");\r\n\r\n        \r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void submitQueriesOnAction(ActionEvent actionEvent) {\r\n        String name = nameTextField.getText();\r\n        String position = PositionComboBox.getValue();\r\n        String description = DescriptionTextArea.getText();\r\n\r\n\r\n        if (name.isEmpty() || position.isEmpty() || description.isEmpty()){\r\n            QueryStatusLabel.setText(\"Please fill all the fields\");\r\n\r\n        }\r\n\r\n        Query q  = new Query(name,position,description);\r\n        queries.add(q);\r\n\r\n        try {\r\n            File f = new File(\"QueryReview.bin\");\r\n            FileOutputStream fos;\r\n            ObjectOutputStream oos;\r\n\r\n            if (f.exists()) {\r\n                fos = new FileOutputStream(f, true);\r\n                oos = new AppendableObjectOutputStream(fos);\r\n            } else {\r\n                fos = new FileOutputStream(f);\r\n                oos = new ObjectOutputStream(fos);\r\n            }\r\n\r\n            // Write the object\r\n            QueryStatusLabel.setText(\"Successfully Query Submitted\" + \"\\n\"+ q.toString());\r\n            oos.writeObject(q);\r\n\r\n\r\n\r\n            oos.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void clearFieldsOnAction(ActionEvent actionEvent) {\r\n        nameTextField.clear();\r\n        PositionComboBox.setValue(null);\r\n        DescriptionTextArea.clear();\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java	(date 1734094436726)
@@ -32,7 +32,7 @@
     @javafx.fxml.FXML
     public void initialize() {
 
-        PositionComboBox.getItems().addAll("FrontDeskStaff","Room Service Manager","Restarant Manager");
+        PositionComboBox.getItems().addAll("FrontDeskStaff","Room Service Manager","Restaurant Manager","Room Service Worker");
 
         
     }
@@ -52,6 +52,9 @@
         Query q  = new Query(name,position,description);
         queries.add(q);
 
+
+
+
         try {
             File f = new File("QueryReview.bin");
             FileOutputStream fos;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CheckInGuestDetails.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CheckInGuestDetails.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/Login/StaffLogin.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/Login/StaffLogin.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FarHanZzzz&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FarHanZzzz/FiveStarHotel.git&quot;,\r\n    &quot;accountId&quot;: &quot;05fd5f93-b42c-44cd-9acf-41986fd5422d&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pOTHwVPEYQNUAVmymNU9UCEMUe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cse.fivestarhotel.HelloApplication\" />\r\n      <module name=\"FiveStarHotel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\" />\r\n      <created>1732636037915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732636037915</updated>\r\n      <workItem from=\"1732691317064\" duration=\"1348000\" />\r\n      <workItem from=\"1732740293857\" duration=\"392000\" />\r\n      <workItem from=\"1732740700449\" duration=\"854000\" />\r\n      <workItem from=\"1732812843972\" duration=\"6000\" />\r\n      <workItem from=\"1732812928251\" duration=\"38000\" />\r\n      <workItem from=\"1732813016733\" duration=\"370000\" />\r\n      <workItem from=\"1732813603231\" duration=\"2575000\" />\r\n      <workItem from=\"1733947475473\" duration=\"786000\" />\r\n      <workItem from=\"1733948278263\" duration=\"481000\" />\r\n      <workItem from=\"1733948776583\" duration=\"630000\" />\r\n      <workItem from=\"1733949431710\" duration=\"1466000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalAccessException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/.idea/workspace.xml	(date 1734094437069)
@@ -7,11 +7,12 @@
     <list default="true" id="f45a8678-6144-4ee8-b094-1a886ecfbc88" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CheckInGuestDetails.bin" beforeDir="false" afterPath="$PROJECT_DIR$/CheckInGuestDetails.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/Login/StaffLoginController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/Login/StaffLogin.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/Login/StaffLogin.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckoutController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviewsController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.Serializable;\r\nimport java.time.LocalDate;\r\n\r\npublic class ViewTransportationServiceDetailsController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private TableView<Transportation> transportationTableView;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Transportation,String> nameCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Transportation,String> emailCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Transportation,LocalDate> dateCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Transportation,String> destinationCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Transportation,String> vehicleTypeCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Transportation, String> timeCol;\r\n\r\n\r\n    //String name, String email, String destination, LocalDate date, String time, String vehicletype\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n        nameCol.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\r\n        emailCol.setCellValueFactory(new PropertyValueFactory<>(\"email\"));\r\n        destinationCol.setCellValueFactory(new PropertyValueFactory<>(\"destination\"));\r\n        timeCol.setCellValueFactory(new PropertyValueFactory<>(\"time\"));\r\n        vehicleTypeCol.setCellValueFactory(new PropertyValueFactory<>(\"vehicletype\"));\r\n        dateCol.setCellValueFactory(new PropertyValueFactory<>(\"date\"));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void showTransportationBookingDetailsOnAction(ActionEvent actionEvent) {\r\n        FileInputStream fis=null;\r\n        ObjectInputStream ois=null;\r\n\r\n//String name, String email, String destination, LocalDate date, String time, String vehicletype\r\n\r\n\r\n        try{\r\n            File f = new File(\"TransportationDetails.bin\");\r\n            if(f.exists()){\r\n                fis = new FileInputStream(f);\r\n            }\r\n            else{\r\n                //Alert: file does not exist\r\n            }\r\n            if(fis != null) ois = new ObjectInputStream(fis);\r\n\r\n            transportationTableView.getItems().clear();\r\n\r\n            while(true) {\r\n                transportationTableView.getItems().add((Transportation) ois.readObject());\r\n\r\n\r\n                //CheckinTableView.setItems(CheckinTabledataList);\r\n            }\r\n            //ois.close();\r\n\r\n        }\r\n        catch(Exception e) {\r\n            try {\r\n                if (ois != null) ois.close();\r\n\r\n            } catch (Exception e2) {\r\n                //\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetailsController.java	(date 1734094436736)
@@ -44,9 +44,6 @@
 
 
 
-
-
-
     @javafx.fxml.FXML
     public void showTransportationBookingDetailsOnAction(ActionEvent actionEvent) {
         FileInputStream fis=null;
@@ -71,9 +68,8 @@
                 transportationTableView.getItems().add((Transportation) ois.readObject());
 
 
-                //CheckinTableView.setItems(CheckinTabledataList);
+
             }
-            //ois.close();
 
         }
         catch(Exception e) {
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport cse.fivestarhotel.CEO.Announcement;\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.time.LocalDate;\r\nimport java.util.PropertyPermission;\r\n\r\npublic class FrontDeskStaffDashboardController\r\n{\r\n    @javafx.fxml.FXML\r\n    private BorderPane dashBoardBorderPane;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Announcement,String> announcementsCol;\r\n    @javafx.fxml.FXML\r\n    private TableView<Announcement> AnnouncementTableView;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<Announcement, LocalDate> dateCol;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n        //String announcement, LocalDate date\r\n        announcementsCol.setCellValueFactory(new PropertyValueFactory<>(\"announcement\"));\r\n        dateCol.setCellValueFactory(new PropertyValueFactory<>(\"date\"));\r\n\r\n\r\n\r\n\r\n        FileInputStream fis=null;\r\n        ObjectInputStream ois=null;\r\n\r\n\r\n\r\n\r\n        try{\r\n            File f = new File(\"AnnoncementsDetails.bin\");\r\n            if(f.exists()){\r\n                fis = new FileInputStream(f);\r\n            }\r\n            else{\r\n                //Alert: file does not exist\r\n            }\r\n            if(fis != null) ois = new ObjectInputStream(fis);\r\n\r\n            AnnouncementTableView.getItems().clear();\r\n\r\n            while(true) {\r\n                AnnouncementTableView.getItems().add((Announcement) ois.readObject());\r\n\r\n\r\n                //CheckinTableView.setItems(CheckinTabledataList);\r\n            }\r\n            //ois.close();\r\n\r\n        }\r\n        catch(Exception e) {\r\n            try {\r\n                if (ois != null) ois.close();\r\n\r\n            } catch (Exception e2) {\r\n                //\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void guestDetailsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml\"));\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void transportationDetailsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetails.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void hotelGuestReviewsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviews.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void checkinOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/Guestcheckin.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void checkoutOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/Guestcheckout.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @Deprecated\r\n    public void ViewBookeventOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewBookEvent.fxml\"));\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void FrontDeskStaffDashboardOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void BookedEventDetailsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewBookEvent.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n\r\n    //Submit Queries\r\n\r\n    @javafx.fxml.FXML\r\n    public void SubmitQueriesOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/Submit Queries.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java	(revision 4c8635ec216ea94914c8e8532581960c1f067485)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java	(date 1734093800326)
@@ -50,10 +50,6 @@
 
         FileInputStream fis=null;
         ObjectInputStream ois=null;
-
-
-
-
         try{
             File f = new File("AnnoncementsDetails.bin");
             if(f.exists()){
