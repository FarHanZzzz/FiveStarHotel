Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.io.*;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n//import static cse.fivestarhotel.FrontDeskStaff.GuestcheckinController.EmailValidator.isValidEmail;\r\n\r\npublic class GuestcheckinController implements Serializable\r\n{\r\n    @javafx.fxml.FXML\r\n    private Label CheckInStatusLabel;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestEmailTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField NumberofRoomsTextField;\r\n    @javafx.fxml.FXML\r\n    private DatePicker CheckoutDatePicker;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestNameTextField;\r\n    @javafx.fxml.FXML\r\n    private TextField GuestContactNoTetField;\r\n    @javafx.fxml.FXML\r\n    private ComboBox<String> RoomTypeComboBox;\r\n\r\n\r\n    ObservableList<CheckInTableDummyClass> CheckinTabledataList = FXCollections.observableArrayList();\r\n    //ObservableList<Guest> GuestDetails = FXCollections.observableArrayList();\r\n\r\n\r\n\r\n     ArrayList<Integer> SingleRoom = new ArrayList<>();\r\n     ArrayList<Integer> DoubleeRoom = new ArrayList<>();\r\n     ArrayList<Integer> SuiteRoom = new ArrayList<>();\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    private TextArea GuestTextAreaDetails;\r\n\r\n\r\n    // ArrayList<CheckInTableDummyClass> CheckinTabledataList = new ArrayList<>();\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n\r\n\r\n        for (int i = 1; i <= 100; i++) {\r\n            if (i <= 50) SingleRoom.add(i); // 50 Single rooms\r\n            else if (i <= 80) DoubleeRoom.add(i); // 30 Double rooms\r\n            else SuiteRoom.add(i); // 20 Suite rooms\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        // combobox\r\n        RoomTypeComboBox.getItems().addAll(\"Single\", \"Double\", \"Suite\");\r\n\r\n\r\n\r\n        //String name, String email, String roomtype, Integer noofRooms, String roomnumber, LocalDate checkoutDate\r\n\r\n\r\n\r\n\r\n        //CheckinTabledataList.add(new CheckInTableDummyClass(\"John Doe\", \"john@example.com\", \"Single\", 1, \"101\", LocalDate.now()));\r\n\r\n        //CheckinTableView.setItems(CheckinTabledataList);\r\n//        CheckinTableView.refresh();\r\n\r\n    }\r\n\r\n\r\n// name,  email,  roomtype,  noofRooms,  roomnumber,  checkoutDate\r\n\r\n    @javafx.fxml.FXML\r\n    public void ClearFieldsOnAction(ActionEvent actionEvent) {\r\n        GuestNameTextField.clear();\r\n        GuestContactNoTetField.clear();\r\n        NumberofRoomsTextField.clear();\r\n        GuestEmailTextField.clear();\r\n        RoomTypeComboBox.setValue(null);\r\n        CheckoutDatePicker.setValue(null);\r\n        NumberofRoomsTextField.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void CheckInOnAction(ActionEvent actionEvent) {\r\n\r\n        String name = GuestNameTextField.getText();\r\n        String email = GuestEmailTextField.getText();\r\n        Integer contactno = Integer.valueOf(GuestContactNoTetField.getText());\r\n        LocalDate checkoutDate = CheckoutDatePicker.getValue();\r\n        String roomtype = RoomTypeComboBox.getValue();\r\n        int noofRooms;\r\n\r\n\r\n\r\n        try {\r\n            noofRooms = Integer.parseInt(NumberofRoomsTextField.getText());\r\n        } catch (NumberFormatException e) {\r\n            CheckInStatusLabel.setText(\"Invalid number of Rooms\");\r\n            return;\r\n        }\r\n\r\n\r\n        // validating other inputs\r\n        if (name.isEmpty() || email.isEmpty() || roomtype.isEmpty() || noofRooms <= 0 || contactno == null ||  checkoutDate == null ){\r\n            CheckInStatusLabel.setText(\"Please fill all the fields\");\r\n        }\r\n\r\n\r\n        // Allocate rooms\r\n        List<Integer> allocatedRooms = allocateRooms(roomtype, noofRooms);\r\n        if (allocatedRooms.isEmpty()) {\r\n            CheckInStatusLabel.setText(\"Not enough rooms available for the selected type!\");\r\n            return;\r\n        }\r\n\r\n        String roomNumber = allocatedRooms.stream().map(String::valueOf).collect(Collectors.joining(\", \"));\r\n\r\n\r\n        CheckInTableDummyClass c = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate,contactno);\r\n        CheckinTabledataList.add(c);\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            File f = new File(\"CheckInGuestDetails.bin\");\r\n            FileOutputStream fos = null;\r\n            ObjectOutputStream oos = null;\r\n\r\n\r\n            if(f.exists()) {\r\n                fos = new FileOutputStream(f, true);\r\n                oos = new AppendableObjectOutputStream(fos);\r\n            }\r\n            else {\r\n                fos = new FileOutputStream(f);\r\n                oos = new ObjectOutputStream(fos);\r\n            }\r\n            fos = new FileOutputStream(f);\r\n                oos = new ObjectOutputStream(fos);\r\n            for(CheckInTableDummyClass s : CheckinTabledataList){\r\n                oos.writeObject(s);\r\n                CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n                GuestTextAreaDetails.setText(\"Guest Details: \" + s.toString());\r\n\r\n          }\r\n\r\n\r\n            oos.close();\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//         for (CheckInTableDummyClass s : CheckinTabledataList){\r\n//         //   CheckinTableView.getItems().add(s);\r\n//         //   CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n//        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public List<Integer> allocateRooms(String roomtype , int noofRooms) {\r\n        List<Integer> roomList;\r\n        List<Integer> allocatedRooms = new ArrayList<>();\r\n\r\n        switch (roomtype) {\r\n            case \"Single\" -> roomList = SingleRoom;\r\n            case \"Double\" -> roomList = DoubleeRoom;\r\n            case \"Suite\" -> roomList = SuiteRoom;\r\n\r\n            default -> {\r\n                return allocatedRooms; // empty list if invalid\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // allocate room if avalidable\r\n        System.out.println(\"Room list for \" + roomtype + \": \" + roomList);\r\n\r\n        // roomlist = 50 , 3\r\n\r\n        if (roomList.size() >= noofRooms) {\r\n            for(int i = 0; i < noofRooms; i++){\r\n                allocatedRooms.add(roomList.remove(0));  // remove and allocate\r\n\r\n            }\r\n\r\n            System.out.println(\"1\"+ allocatedRooms);\r\n\r\n\r\n            // single 1 -50 =\r\n\r\n        }\r\n\r\n        else {\r\n            System.out.println(\"Insufficient rooms for \" + roomtype + \". Available: \" + roomList.size());\r\n\r\n        }\r\n\r\n\r\n        System.out.println(\"Final \"+ allocatedRooms);\r\n\r\n        return allocatedRooms;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //        // ends\r\n        //\r\n        //        //        CheckinTabledataList.add(new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate));\r\n        ////        for(CheckInTableDummyClass c: CheckinTabledataList){\r\n        ////            CheckinTableView.getItems().add(c);\r\n        ////            CheckInStatusLabel.setText(\"Check-in successful! Rooms allocated: \" + roomNumber);\r\n        //\r\n        //        //CheckInTableDummyClass temp = new CheckInTableDummyClass(name,email,roomtype,noofRooms,roomNumber,checkoutDate);\r\n        ////        CheckinTabledataList.add(temp);\r\n        ////        CheckinTableView.refresh();\r\n        //        // String name, String email, String roomtype, Integer noofRooms, Integer roomnumber, LocalDate checkoutDate\r\n        //\r\n        //\r\n        //// main code of tableview\r\n        //\r\n        //\r\n        //\r\n        //            //Will create multiple file header issue while appending objects (class instances)\r\n        //\r\n        //        // append\r\n\r\n\r\n        //\r\n//                    if(f.exists()) {\r\n//                        fos = new FileOutputStream(f, true);\r\n//                        oos = new AppendableObjectOutputStream(fos);\r\n//                    }\r\n//                    else {\r\n//                        fos = new FileOutputStream(f);\r\n//                        oos = new ObjectOutputStream(fos);\r\n//                    }\r\n//\r\n//\r\n//\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java	(date 1733940832397)
@@ -143,40 +143,65 @@
 
 
 
-
         try {
             File f = new File("CheckInGuestDetails.bin");
-            FileOutputStream fos = null;
-            ObjectOutputStream oos = null;
+            FileOutputStream fos;
+            ObjectOutputStream oos;
 
-
-            if(f.exists()) {
+            // Use appropriate streams based on file existence
+            if (f.exists()) {
                 fos = new FileOutputStream(f, true);
                 oos = new AppendableObjectOutputStream(fos);
-            }
-            else {
+            } else {
                 fos = new FileOutputStream(f);
-                oos = new ObjectOutputStream(fos);
-            }
-            fos = new FileOutputStream(f);
                 oos = new ObjectOutputStream(fos);
-            for(CheckInTableDummyClass s : CheckinTabledataList){
-                oos.writeObject(s);
-                CheckInStatusLabel.setText("Check-in successful! Rooms allocated: " + roomNumber);
-                GuestTextAreaDetails.setText("Guest Details: " + s.toString());
-
-          }
-
+            }
+
+            // Write the object
+            oos.writeObject(c);
+
+            // Update UI
+            CheckInStatusLabel.setText("Check-in successful! Rooms allocated: " + roomNumber);
+            GuestTextAreaDetails.setText("Guest Details: " + CheckinTabledataList.toString());
 
             oos.close();
-        }
-        catch(Exception e){
+        } catch (Exception e) {
             e.printStackTrace();
         }
 
 
 
-
+        //try {
+        //            File f = new File("CheckInGuestDetails.bin");
+        //            FileOutputStream fos = null;
+        //            ObjectOutputStream oos = null;
+        //
+        //
+        //            if(f.exists()) {
+        //                fos = new FileOutputStream(f, true);
+        //                oos = new AppendableObjectOutputStream(fos);
+        //            }
+        //            else {
+        //                fos = new FileOutputStream(f);
+        //                oos = new AppendableObjectOutputStream(fos);
+        //            }
+        //
+        //
+        //            fos = new FileOutputStream(f);
+        //                oos = new AppendableObjectOutputStream(fos);
+        //         //   for(CheckInTableDummyClass s : CheckinTabledataList){
+        //                oos.writeObject(c);
+        //                CheckInStatusLabel.setText("Check-in successful! Rooms allocated: " + roomNumber);
+        //                GuestTextAreaDetails.setText("Guest Details: " + CheckinTabledataList.toString());
+        //
+        //          //}
+        //
+        //
+        //            oos.close();
+        //        }
+        //        catch(Exception e){
+        //            e.printStackTrace();
+        //}
 
 
 
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.TableColumn;\r\n//package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.Serializable;\r\nimport java.time.LocalDate;\r\n\r\npublic class AccessGuestDetailsController implements Serializable\r\n{\r\n\r\n    @javafx.fxml.FXML\r\n    private TableView<CheckInTableDummyClass> CheckinTableView;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass,Integer> NumberofRoomsCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass,String> RoomtypeCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass,String> roomnumberCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass,String> EmailCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass, LocalDate> checkoutCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass,String> NameCol;\r\n    @javafx.fxml.FXML\r\n    private TableColumn<CheckInTableDummyClass,Integer> contactInfoCol;\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n        NameCol.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\r\n        EmailCol.setCellValueFactory(new PropertyValueFactory<>(\"email\"));\r\n        RoomtypeCol.setCellValueFactory(new PropertyValueFactory<>(\"roomtype\"));\r\n        NumberofRoomsCol.setCellValueFactory(new PropertyValueFactory<>(\"noofRooms\"));\r\n        roomnumberCol.setCellValueFactory(new PropertyValueFactory<>(\"roomnumber\"));\r\n        checkoutCol.setCellValueFactory(new PropertyValueFactory<>(\"checkoutDate\"));\r\n        contactInfoCol.setCellValueFactory(new PropertyValueFactory<>(\"contactinfo\"));\r\n\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GenerateCheckinDetailsTableOnAction(ActionEvent actionEvent) {\r\n\r\n        FileInputStream fis=null;\r\n        ObjectInputStream ois=null;\r\n\r\n\r\n        try{\r\n            File f = new File(\"CheckInGuestDetails.bin\");\r\n            if(f.exists()){\r\n                fis = new FileInputStream(f);\r\n            }\r\n            else{\r\n                //Alert: file does not exist\r\n            }\r\n            if(fis != null) ois = new ObjectInputStream(fis);\r\n\r\n            CheckinTableView.getItems().clear();\r\n\r\n            while(true) {\r\n                CheckinTableView.getItems().add((CheckInTableDummyClass) ois.readObject());\r\n\r\n\r\n                //CheckinTableView.setItems(CheckinTabledataList);\r\n            }\r\n            //ois.close();\r\n\r\n        }\r\n        catch(Exception e) {\r\n            try {\r\n                if (ois != null) ois.close();\r\n\r\n            } catch (Exception e2) {\r\n                //\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java	(date 1733934198911)
@@ -10,10 +10,7 @@
 import javafx.scene.control.TextField;
 import javafx.scene.control.cell.PropertyValueFactory;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.ObjectInputStream;
-import java.io.Serializable;
+import java.io.*;
 import java.time.LocalDate;
 
 public class AccessGuestDetailsController implements Serializable
@@ -36,6 +33,7 @@
     @javafx.fxml.FXML
     private TableColumn<CheckInTableDummyClass,Integer> contactInfoCol;
 
+
     @javafx.fxml.FXML
     public void initialize() {
         NameCol.setCellValueFactory(new PropertyValueFactory<>("name"));
@@ -91,4 +89,48 @@
 
     }
 
+
+
+//
+//    File f = null;
+//    FileInputStream fis = null;
+//    ObjectInputStream ois = null;
+//
+//        try {
+//    f = new File("FacultyData.bin");
+//    fis = new FileInputStream(f);
+//    ois = new ObjectInputStream(fis);
+//    CheckInTableDummyClass st ;
+//    try {
+//        while(true){
+//            st = (CheckInTableDummyClass) ois.readObject();
+//            System.out.println((st));
+//            CheckinTabledataList.add(st) ;
+//        }
+//    }//end of nested try
+//    catch(Exception e){
+//        // handling code
+//    }//nested catch
+//} catch (
+//    IOException ex) {
+//    System.out.println(ex.toString());
+//}
+//        finally {
+//    try {
+//        if(ois != null) ois.close();
+//    } catch (IOException ex) { }
+//}
+//
+//        return CheckinTabledataList ;
+//
+
+
+
+
+
+
+
+
+
+
 }
\ No newline at end of file
Index: src/main/java/cse/fivestarhotel/HotelGuest/Reviews.java
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HotelGuest/Reviews.java b/src/main/java/cse/fivestarhotel/HotelGuest/Reviews.java
deleted file mode 100644
--- a/src/main/java/cse/fivestarhotel/HotelGuest/Reviews.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ /dev/null	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
@@ -1,48 +0,0 @@
-package cse.fivestarhotel.HotelGuest;
-
-import java.io.Serializable;
-
-public class Reviews implements Serializable {
-    private String name, rating, review;
-
-    public Reviews(String name, String rating, String review) {
-        this.name = name;
-        this.rating = rating;
-        this.review = review;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public String getRating() {
-        return rating;
-    }
-
-    public void setRating(String rating) {
-        this.rating = rating;
-    }
-
-    public String getReview() {
-        return review;
-    }
-
-    public void setReview(String review) {
-        this.review = review;
-    }
-
-    @Override
-    public String toString() {
-        return "Reviews{" +
-                "name='" + name + '\'' +
-                ", rating='" + rating + '\'' +
-                ", review='" + review + '\'' +
-                '}';
-    }
-}
-
-
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport java.io.IOException;\r\nimport java.io.ObjectOutputStream;\r\nimport java.io.OutputStream;\r\n\r\npublic class AppendableObjectOutputStream extends ObjectOutputStream {\r\n\r\n    public AppendableObjectOutputStream(OutputStream out) throws IOException {\r\n        super(out);\r\n    }\r\n\r\n    @Override\r\n    protected void writeStreamHeader() throws IOException {\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java	(date 1733939362167)
@@ -4,7 +4,8 @@
 import java.io.ObjectOutputStream;
 import java.io.OutputStream;
 
-public class AppendableObjectOutputStream extends ObjectOutputStream {
+
+public class AppendableObjectOutputStream extends ObjectOutputStream  {
 
     public AppendableObjectOutputStream(OutputStream out) throws IOException {
         super(out);
Index: src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.HotelGuest;\r\n\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class HotelGuestDashboardController\r\n{\r\n    @javafx.fxml.FXML\r\n    private BorderPane DashboardBorderPaneHotelGuest;\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n    }\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void BackToDashboardOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/HotelGuestDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void resturanttablebookingOnAction(ActionEvent actionEvent) {\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/resturantPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void viewmenuOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ViewMenu.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GuestroomserviceOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/RoomServiceReq.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void laundrybookingOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/LaundryPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void transportationbookingOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/TransportationDetailsPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GuestReviewsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ReviewsPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n    @Deprecated\r\n    public void ResturantReviewOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ReviewRESTURANTpage.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n    @Deprecated\r\n    public void HotelReviewOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/ReviewROOMpage.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void eventbookingOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/HotelGuest/EventReservationPAGE.fxml\"));\r\n\r\n            DashboardBorderPaneHotelGuest.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n    }\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void GuestLogoutOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/Login/GuestLogin.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java b/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java
--- a/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java	(date 1733939651486)
@@ -21,6 +21,41 @@
     }
 
 
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
     @javafx.fxml.FXML
     public void BackToDashboardOnAction(ActionEvent actionEvent) throws IOException {
         FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/HotelGuest/HotelGuestDashboard.fxml"));
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\npublic class FrontDeskStaff {\r\n\r\n    private String name;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java	(date 1733937825726)
@@ -1,6 +1,8 @@
 package cse.fivestarhotel.FrontDeskStaff;
 
-public class FrontDeskStaff {
+import java.io.Serializable;
+
+public class FrontDeskStaff  {
 
     private String name;
 
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n/// Goals thats been Done\r\n\r\n1) View Book Event ->>>>>>>>>>>>>> ViewBookEvent\r\n\r\n2) Add Check in  -> - >>  Guestcheckin\r\n\r\n3) View Hotel Guest Reviews ->>>>  ViewHotelguestReviews\r\n\r\n4) View CHecked in guests ( Access guest details)  -> AccessGuestDetails\r\n\r\n\r\n//\r\nModel class = Event , BookTable, CheckInTableDummyClass,\r\n//\r\n\r\n\r\n\r\n\r\n**  Pending\r\n5) Submit Queries       - >- >- >- >- >- >- >- >- >- >- >      will do it\r\n\r\n6) View Transportation Service details  - >- >- >- >- >- >- >- >   will do it\r\n\r\n7) Dashboard       - >- >- >- >- >- >- >- >- >\r\n\r\n\r\n\r\n\r\n////////\r\n\r\n8) Room occupancy check         ||  Needs Validation and\r\n9) Checkout                     ||  proper\r\n\r\n////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done b/src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done	(date 1733927302000)
@@ -39,3 +39,5 @@
 
 
 
+
+
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport java.time.LocalDate;\r\n\r\npublic class Event {\r\n    private String name,email;\r\n    private String eventType;\r\n    private LocalDate date;\r\n    private String timing;\r\n    private String additionalNotes;\r\n\r\n\r\n    public Event(String name, String email, String eventType, LocalDate date, String timing, String additionalNotes) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.eventType = eventType;\r\n        this.date = date;\r\n        this.timing = timing;\r\n        this.additionalNotes = additionalNotes;\r\n\r\n    }\r\n\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getEventType() {\r\n        return eventType;\r\n    }\r\n\r\n    public void setEventType(String eventType) {\r\n        this.eventType = eventType;\r\n    }\r\n\r\n    public LocalDate getDate() {\r\n        return date;\r\n    }\r\n\r\n    public void setDate(LocalDate date) {\r\n        this.date = date;\r\n    }\r\n\r\n    public String getTiming() {\r\n        return timing;\r\n    }\r\n\r\n    public void setTiming(String timing) {\r\n        this.timing = timing;\r\n    }\r\n\r\n    public String getAdditionalNotes() {\r\n        return additionalNotes;\r\n    }\r\n\r\n    public void setAdditionalNotes(String additionalNotes) {\r\n        this.additionalNotes = additionalNotes;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Event{\" +\r\n                \"name='\" + name + '\\'' +\r\n                \", email='\" + email + '\\'' +\r\n                \", eventType='\" + eventType + '\\'' +\r\n                \", Date=\" + date +\r\n                \", timing='\" + timing + '\\'' +\r\n                \", additionalNotes='\" + additionalNotes + '\\'' +\r\n                '}';\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java	(date 1733927412000)
@@ -1,8 +1,9 @@
 package cse.fivestarhotel.FrontDeskStaff;
 
+import java.io.Serializable;
 import java.time.LocalDate;
 
-public class Event {
+public class Event implements Serializable {
     private String name,email;
     private String eventType;
     private LocalDate date;
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport javafx.scene.control.ComboBox;\r\n\r\npublic class Room {\r\n\r\n    private String roomtype;\r\n    private Integer roomid;\r\n    private Boolean availability;\r\n\r\n\r\n    public Room(String roomtype, Integer roomid, Boolean availability) {\r\n        this.roomtype = roomtype;\r\n        this.roomid = roomid;\r\n        this.availability = availability;\r\n    }\r\n\r\n\r\n    public String getRoomtype() {\r\n        return roomtype;\r\n    }\r\n\r\n    public void setRoomtype(String roomtype) {\r\n        this.roomtype = roomtype;\r\n    }\r\n\r\n    public Integer getRoomid() {\r\n        return roomid;\r\n    }\r\n\r\n    public void setRoomid(Integer roomid) {\r\n        this.roomid = roomid;\r\n    }\r\n\r\n    public Boolean getAvailability() {\r\n        return availability;\r\n    }\r\n\r\n    public void setAvailability(Boolean availability) {\r\n        this.availability = availability;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Room{\" +\r\n                \"roomtype='\" + roomtype + '\\'' +\r\n                \", roomid=\" + roomid +\r\n                \", availability=\" + availability +\r\n                '}';\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java	(date 1733927412000)
@@ -2,7 +2,9 @@
 
 import javafx.scene.control.ComboBox;
 
-public class Room {
+import java.io.Serializable;
+
+public class Room implements Serializable {
 
     private String roomtype;
     private Integer roomid;
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\nimport cse.fivestarhotel.HelloApplication;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class FrontDeskStaffDashboardController\r\n{\r\n    @javafx.fxml.FXML\r\n    private BorderPane dashBoardBorderPane;\r\n\r\n\r\n\r\n\r\n    //       try {\r\n//                FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/Guestcheckin.fxml\"));\r\n//            );\r\n//\r\n//            dashBoardBorderPane.setCenter(myFxmlLoader.load());\r\n//        }\r\n//        catch(Exception e){}\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @javafx.fxml.FXML\r\n    public void roomOccupancyOnAction(ActionEvent actionEvent) {\r\n        try {\r\n                 FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/CheckRoomOccupancy.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void guestDetailsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetails.fxml\"));\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void transportationDetailsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewTransportationServiceDetails.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void hotelGuestReviewsOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewHotelguestReviews.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void checkinOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/Guestcheckin.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void checkoutOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/Guestcheckout.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void ViewBookeventOnAction(ActionEvent actionEvent) {\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/ViewBookEvent.fxml\"));\r\n\r\n\r\n            dashBoardBorderPane.setCenter(fxmlLoader.load());\r\n        }\r\n        catch(Exception e){}\r\n\r\n\r\n    }\r\n\r\n    @javafx.fxml.FXML\r\n    public void FrontDeskStaffDashboardOnAction(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        Stage stage = (Stage) (((Node) actionEvent.getSource()).getScene().getWindow());\r\n        stage.setTitle(\"Hello\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java	(date 1733929008000)
@@ -123,7 +123,6 @@
         try {
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/FrontDeskStaff/ViewBookEvent.fxml"));
 
-
             dashBoardBorderPane.setCenter(fxmlLoader.load());
         }
         catch(Exception e){}
Index: src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel.FrontDeskStaff;\r\n\r\npublic class SubmitQueriesController\r\n{\r\n    @javafx.fxml.FXML\r\n    public void initialize() {\r\n    }}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java b/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java
--- a/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java	(date 1733927106000)
@@ -4,4 +4,11 @@
 {
     @javafx.fxml.FXML
     public void initialize() {
-    }}
\ No newline at end of file
+
+
+
+
+
+        
+    }
+}
\ No newline at end of file
Index: src/main/java/cse/fivestarhotel/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cse.fivestarhotel;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n\r\n\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load());\r\n        stage.setTitle(\"Sign in!\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cse/fivestarhotel/HelloApplication.java b/src/main/java/cse/fivestarhotel/HelloApplication.java
--- a/src/main/java/cse/fivestarhotel/HelloApplication.java	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/src/main/java/cse/fivestarhotel/HelloApplication.java	(date 1733927602000)
@@ -10,7 +10,7 @@
     public void start(Stage stage) throws IOException {
 
 
-        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml"));
+        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboard.fxml"));
         Scene scene = new Scene(fxmlLoader.load());
         stage.setTitle("Sign in!");
         stage.setScene(scene);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboardController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboardController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/AddMenuDish.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/AddMenuDish.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;FarHanZzzz&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/FarHanZzzz/FiveStarHotel.git&quot;,\r\n    &quot;accountId&quot;: &quot;ffe06a0d-a38a-49d0-901d-f1ca4a8601e0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pOTHwVPEYQNUAVmymNU9UCEMUe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/FARHAN/AppData/Local/SceneBuilder/SceneBuilder.exe&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cse.fivestarhotel.HelloApplication\" />\r\n      <module name=\"FiveStarHotel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f45a8678-6144-4ee8-b094-1a886ecfbc88\" name=\"Changes\" comment=\"\" />\r\n      <created>1732636037915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732636037915</updated>\r\n      <workItem from=\"1732691317064\" duration=\"1348000\" />\r\n      <workItem from=\"1732740293857\" duration=\"392000\" />\r\n      <workItem from=\"1732740700449\" duration=\"854000\" />\r\n      <workItem from=\"1732812843972\" duration=\"6000\" />\r\n      <workItem from=\"1732812928251\" duration=\"38000\" />\r\n      <workItem from=\"1732813016733\" duration=\"370000\" />\r\n      <workItem from=\"1732813603231\" duration=\"2575000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalAccessException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 74c72925c47294fdfe0cc1e29767a920fa2b1088)
+++ b/.idea/workspace.xml	(date 1733940832523)
@@ -5,9 +5,24 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="f45a8678-6144-4ee8-b094-1a886ecfbc88" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboardController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/AddMenuDish.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/AddMenuDish.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/RestaurantManager/RestaurantManagerDashboard.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CheckInGuestDetails.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/MenuDetails.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Reviews.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/reviews.dat" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AccessGuestDetailsController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/AppendableObjectOutputStream.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/Event.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaff.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/FrontDeskStaffDashboardController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/GuestcheckinController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/Room.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/SubmitQueriesController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/FrontDeskStaff/goals thats been done" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HelloApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelGuest/HotelGuestDashboardController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cse/fivestarhotel/HotelGuest/Reviews.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/cse/fivestarhotel/goals thats been done" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
